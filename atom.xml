<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JC小站</title>
  
  <subtitle>与你共享生活和今日份的丧</subtitle>
  <link href="https://jcxiaozhan.gitee.io/atom.xml" rel="self"/>
  
  <link href="https://jcxiaozhan.gitee.io/"/>
  <updated>2021-09-20T07:33:51.032Z</updated>
  <id>https://jcxiaozhan.gitee.io/</id>
  
  <author>
    <name>John Cena</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java常用类</title>
    <link href="https://jcxiaozhan.gitee.io/2021/09/20/Java%E5%B8%B8%E7%94%A8%E7%B1%BB/"/>
    <id>https://jcxiaozhan.gitee.io/2021/09/20/Java%E5%B8%B8%E7%94%A8%E7%B1%BB/</id>
    <published>2021-09-19T16:00:00.000Z</published>
    <updated>2021-09-20T07:33:51.032Z</updated>
    
    <content type="html"><![CDATA[<h2 id="内部类"><a href="#内部类" class="headerlink" title="内部类"></a>内部类</h2><ul><li>概念：在一个类的内部再定义一个完整的类，当外部类与内部类的属性重名时，优先访问内部类属性</li><li>分类：成员内部类、静态内部类、局部内部类、匿名内部类</li></ul><h3 id="成员内部类"><a href="#成员内部类" class="headerlink" title="成员内部类"></a>成员内部类</h3><ul><li>成员内部类在类的内部定义，与外部类的变量和方法同级别的类</li><li>成员内部类可以直接拿到外部类的私有属性</li><li>成员内部类里不能定义静态成员、可以包含静态常量(final)，这个静态常量在不实例化外部类的情况下可以调用</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Outer</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">out</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;这是外部方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Inner</span> </span>&#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">final</span> String XXX = <span class="string">&quot;这是一个静态常量&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">in</span><span class="params">()</span></span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;这是内部方法&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getID</span><span class="params">()</span></span>&#123;</span><br><span class="line">            System.out.println(id);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实例化成员内部类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 在没有实例化外部类的情况下可调用内部类的静态常量</span></span><br><span class="line">        String xxx = Outer.Inner.XXX;</span><br><span class="line">        System.out.println(xxx);</span><br><span class="line"></span><br><span class="line">        Outer outer = <span class="keyword">new</span> Outer();</span><br><span class="line">        Outer.Inner inner = outer.<span class="function">new <span class="title">Inner</span><span class="params">()</span></span>;</span><br><span class="line">        inner.getID();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="局部内部类"><a href="#局部内部类" class="headerlink" title="局部内部类"></a>局部内部类</h3><ul><li>局部内部类就是定义在外部类的方法里面的类，作用范围和创建对象范围仅限于当前方法，不能添加任何修饰符</li><li>局部内部类访问外部类当前方法中的局部变量时，因无法保障变量的生命周期与自身相同，变量必须修饰为final，这是JDK1.7的规定，JDK1.8以后，这个final会自动添加，不用我们考虑</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Outer</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">Inner</span></span>&#123;</span><br><span class="line">            <span class="keyword">private</span> String str = <span class="string">&quot;一个局部变量&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">in</span><span class="params">()</span></span>&#123;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="静态内部类"><a href="#静态内部类" class="headerlink" title="静态内部类"></a>静态内部类</h3><ul><li>非静态内部类需要在外部类存在一个实例时才可以调用，静态内部类可以直接调用，因为没有一个外部类的实例，所以在静态内部类里面不可以直接访问外部类的属性和方法，若想访问，需要创建外部类的对象来调用</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Outer</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name = <span class="string">&quot;xxx&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Inner</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String address = <span class="string">&quot;上海&quot;</span>;</span><br><span class="line">        <span class="keyword">private</span> String phone = <span class="string">&quot;111&quot;</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> count = <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line">            Outer outer = <span class="keyword">new</span> Outer();</span><br><span class="line"></span><br><span class="line">            System.out.println(outer.name);</span><br><span class="line">            System.out.println(outer.age);</span><br><span class="line"></span><br><span class="line">            System.out.println(address);</span><br><span class="line">            System.out.println(phone);</span><br><span class="line"></span><br><span class="line">            System.out.println(Inner.count);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="匿名内部类"><a href="#匿名内部类" class="headerlink" title="匿名内部类"></a>匿名内部类</h3><ul><li>匿名内部类也就是没有名字的内部类，正因为没有名字，所以匿名内部类只能使用一次，它通常用来简化代码编写，但使用匿名内部类还有个前提条件：必须继承一个父类或实现一个接口</li><li>匿名类就是在实例化类的同时写出方法，不使用引用保存实例</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Outer().method();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在接口上使用匿名内部类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Person p = <span class="keyword">new</span> Person() &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;eat something&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        p.eat();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最常用的情况就是在多线程的实现上，因为要实现多线程必须继承Thread类或是继承Runnable接口<br>Thread类的匿名内部类实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Thread t = <span class="keyword">new</span> Thread() &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">                    System.out.print(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        t.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Runnable接口的匿名内部类实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Runnable r = <span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">                    System.out.print(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        Thread t = <span class="keyword">new</span> Thread(r);</span><br><span class="line">        t.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h2><p>Object类是所有类的超类，所有类默认继承Object类</p><h3 id="getClass"><a href="#getClass" class="headerlink" title="getClass()"></a>getClass()</h3><p>返回引用中存储的实际对象类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Student stu = <span class="keyword">new</span> Student();</span><br><span class="line">Class <span class="class"><span class="keyword">class</span> </span>= stu.getClass();</span><br></pre></td></tr></table></figure><h3 id="hashCode"><a href="#hashCode" class="headerlink" title="hashCode()"></a>hashCode()</h3><p>返回对象的哈希值</p><p>哈希值：根据对象的地址或字符串或数字使用hash算法计算出来的int类型的数值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Student stu = <span class="keyword">new</span> Student();</span><br><span class="line"><span class="keyword">int</span> hash = stu.hashCode();</span><br></pre></td></tr></table></figure><h3 id="toString-NaN"><a href="#toString-NaN" class="headerlink" title="toString()"></a>toString()</h3><p>返回该对象的字符串表示，因为默认打印的是类的内存地址，所以通常我们都会重写这个方法，达到输出字符串的目的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name, <span class="keyword">int</span> age)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;name:&quot;</span> + name + <span class="string">&quot;age:&quot;</span> + age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Student stu = <span class="keyword">new</span> Student(<span class="string">&quot;张三&quot;</span>,<span class="number">20</span>);</span><br><span class="line">String stuInfo = stu.toString();</span><br></pre></td></tr></table></figure><h3 id="equals"><a href="#equals" class="headerlink" title="equals()"></a>equals()</h3><p>比较两个对象地址是否相同，这个方法在String中被重写了，重写后的方法先对比引用地址，如不相同则对比字面值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Student stu1 = <span class="keyword">new</span> Student();</span><br><span class="line">Student stu2 = <span class="keyword">new</span> Student();</span><br><span class="line"><span class="keyword">boolean</span> result = stu1.equals(stu2);</span><br></pre></td></tr></table></figure><h3 id="finalize"><a href="#finalize" class="headerlink" title="finalize()"></a>finalize()</h3><p>垃圾回收方法，由JVM自动调用此方法</p><ul><li>垃圾对象：没有有效引用指向此对象</li><li>垃圾回收：由GC销毁垃圾对象，释放数据存储空间</li><li>自动回收机制：JVM的内存耗尽，一次性回收所有垃圾对象</li><li>手动回收机制：使用System.gc();通知JVM执行垃圾回收</li></ul><h2 id="String"><a href="#String" class="headerlink" title="String"></a>String</h2><h3 id="创建字符串的两种方式及区别"><a href="#创建字符串的两种方式及区别" class="headerlink" title="创建字符串的两种方式及区别"></a>创建字符串的两种方式及区别</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 第一种创建方式，栈内引用直接指向方法区中的常量池中的值</span></span><br><span class="line">String str1 = <span class="string">&quot;你好&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第二种创建，堆内新建对象，对象指向方法区中的常量池中的值栈内引用指向堆内对象</span></span><br><span class="line">String str2 = <span class="keyword">new</span> String(<span class="string">&quot;Hello World&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="length"><a href="#length" class="headerlink" title="length()"></a>length()</h3><p>返回字符串长度</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String str = <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> leng = str.length();</span><br></pre></td></tr></table></figure><h3 id="charAt-int-index"><a href="#charAt-int-index" class="headerlink" title="charAt(int index)"></a>charAt(int index)</h3><p>返回某个位置的字符</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String str = <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> c = str.charAt(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h3 id="contains-String-str"><a href="#contains-String-str" class="headerlink" title="contains(String str)"></a>contains(String str)</h3><p>判断是否包含某个子字符串，返回布尔值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String str = <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line"><span class="keyword">boolean</span> result = str.contains(<span class="string">&quot;Hello&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="toCharArray"><a href="#toCharArray" class="headerlink" title="toCharArray()"></a>toCharArray()</h3><p>将字符串转换为字符数组返回</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String str = <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line"><span class="keyword">char</span>[] strs = str.toCharArray();</span><br></pre></td></tr></table></figure><h3 id="indexOf-String-str"><a href="#indexOf-String-str" class="headerlink" title="indexOf(String str)"></a>indexOf(String str)</h3><p>查找str首次出现的下标，返回，如果不存在，返回-1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String str = <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> index = str.indexOf(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line"><span class="comment">// 从第四位开始查找</span></span><br><span class="line"><span class="keyword">int</span> index = str.indexOf(<span class="string">&quot;Hello&quot;</span>,<span class="number">4</span>);</span><br></pre></td></tr></table></figure><h3 id="lastIndexOf-String-str"><a href="#lastIndexOf-String-str" class="headerlink" title="lastIndexOf(String str)"></a>lastIndexOf(String str)</h3><p>查找字符串在当前字符串中最后一次出现的下标，返回，如果不存在，返回-1;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String str = <span class="string">&quot;Java Hello Java CC Java&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> index = str.lastIndexOf(<span class="string">&quot;Java&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="trim"><a href="#trim" class="headerlink" title="trim()"></a>trim()</h3><p>去掉字符串前后空格</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String str = <span class="string">&quot;    Hello World    &quot;</span>;</span><br><span class="line">String str2 = str.trim();</span><br></pre></td></tr></table></figure><h3 id="toUpperCase"><a href="#toUpperCase" class="headerlink" title="toUpperCase()"></a>toUpperCase()</h3><p>将小写转成大写</p><h3 id="toLowerCase"><a href="#toLowerCase" class="headerlink" title="toLowerCase()"></a>toLowerCase()</h3><p>将大写转换成小写</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String str = <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line">String str2 = str.toUpperCase();</span><br><span class="line">String str3 = str.toLowerCase();</span><br></pre></td></tr></table></figure><h3 id="endsWith-String-str"><a href="#endsWith-String-str" class="headerlink" title="endsWith(String str)"></a>endsWith(String str)</h3><p>判断字符串是否以str结尾</p><h3 id="startsWith-String-str"><a href="#startsWith-String-str" class="headerlink" title="startsWith(String str)"></a>startsWith(String str)</h3><p>判断字符串是否以str开头</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String str = <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line"><span class="keyword">boolean</span> r1 = str.startsWith(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line"><span class="keyword">boolean</span> r2 = str.endsWith(<span class="string">&quot;World&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="replace-char-oldChar-char-newChar"><a href="#replace-char-oldChar-char-newChar" class="headerlink" title="replace(char oldChar,char newChar)"></a>replace(char oldChar,char newChar)</h3><p>将旧字符串替换成新字符串</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String str = <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line">String str2 = str.replace(<span class="string">&quot;World&quot;</span>,<span class="string">&quot;Java&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="split-String-str"><a href="#split-String-str" class="headerlink" title="split(String str)"></a>split(String str)</h3><p>根据str对字符串进行拆分，返回一个字符串数组</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String str = <span class="string">&quot;Hello World Java PHP C,Python|C++&quot;</span>;</span><br><span class="line"><span class="comment">// 以空格分隔字符串</span></span><br><span class="line">String[] strs = str.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line"><span class="comment">// 以多个符号分隔字符串空格，逗号竖线都可分隔</span></span><br><span class="line">String[] strs = str.split(<span class="string">&quot;[ ,|]&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="可变字符串"><a href="#可变字符串" class="headerlink" title="可变字符串"></a>可变字符串</h2><ul><li><p>StringBuffer : 可变长字符串，运行效率慢、线程安全</p></li><li><p>StringBuilder : 可变长字符串、运行快、线程不安全</p></li><li><p>StringBuffer和StringBuilder的效率都高于String，都比String节省内存</p></li><li><p>StringBuffer和StringBuilder的用法是一样的，StringBuilder的效率高于StringBuffer</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"><span class="comment">// append()追加</span></span><br><span class="line">sb.append(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// insert()添加</span></span><br><span class="line">sb.insert(<span class="number">0</span>,<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// replace()替换:取前不取后</span></span><br><span class="line">sb.replace(<span class="number">6</span>,<span class="number">11</span>,<span class="string">&quot;Java&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// delete()删除</span></span><br><span class="line">sb.delete(<span class="number">6</span>,sb.length());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印</span></span><br><span class="line">sb.toString();</span><br></pre></td></tr></table></figure><h2 id="BigDecimal"><a href="#BigDecimal" class="headerlink" title="BigDecimal"></a>BigDecimal</h2><ul><li>float和double类型的主要设计目标是为了科学计算和工程计算。他们执行二进制浮点运算，然而，它们没有提供完全精确的结果。但是，商业计算往往要求结果精确，这时候BigDecimal就派上大用场啦。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">BigDecimal bd1 = <span class="keyword">new</span> BigDecimal(<span class="string">&quot;1.0&quot;</span>);</span><br><span class="line">BigDecimal bd2 = <span class="keyword">new</span> BigDecimal(<span class="string">&quot;0.9&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加</span></span><br><span class="line">BigDecimal result1 = bd1.add(bd2);</span><br><span class="line"><span class="comment">// 减</span></span><br><span class="line">BigDecimal result2 = bd1.subtract(bd2);</span><br><span class="line"><span class="comment">// 乘</span></span><br><span class="line">BigDecimal result3 = bd1.multiply(bd2);</span><br><span class="line"><span class="comment">// 除</span></span><br><span class="line">BigDecimal result4 = bd1.divide(bd2);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 因为除不尽会报错，所以这里保留两位小数四舍五入</span></span><br><span class="line">BigDecimal result5 = bd1.divide(bd2).setScale(<span class="number">2</span>, RoundingMode.HALF_UP)</span><br></pre></td></tr></table></figure><h2 id="Date"><a href="#Date" class="headerlink" title="Date"></a>Date</h2><ul><li>Date表示特定的瞬间，精确到毫秒。Date类中的大部分方法都已经被Calendar类中的方法所取代</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 1 创建Date对象</span></span><br><span class="line">    Date date1 = <span class="keyword">new</span> Date();</span><br><span class="line">    System.out.println(date1.toString()); <span class="comment">//Sun Sep 19 18:53:23 CST 2021</span></span><br><span class="line">    System.out.println(date1.toLocaleString()); <span class="comment">//2021年9月19日 下午6:53:23</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 昨天</span></span><br><span class="line">    Date date2 = <span class="keyword">new</span> Date(date1.getTime() - (<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">1000</span>)); </span><br><span class="line">    System.out.println(date2.toLocaleString()); <span class="comment">//2021年9月18日 下午6:53:23</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2 方法after before</span></span><br><span class="line">    <span class="keyword">boolean</span> b1 = date1.after(date2);</span><br><span class="line">    System.out.println(b1); <span class="comment">//true</span></span><br><span class="line">    <span class="keyword">boolean</span> b2 = date1.before(date2);</span><br><span class="line">    System.out.println(b2); <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 比较compareTo();</span></span><br><span class="line">    <span class="keyword">int</span> d = date1.compareTo(date1);</span><br><span class="line">    System.out.println(d); <span class="comment">// 多的为1 少的为 -1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 比较是否相等 equals()</span></span><br><span class="line">    <span class="keyword">boolean</span> b3 = date1.equals(date2);</span><br><span class="line">    System.out.println(b3); <span class="comment">// false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Calendar"><a href="#Calendar" class="headerlink" title="Calendar"></a>Calendar</h2><ul><li>Calendar提供了获取或设置各种日历字段的方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 1. 创建 Calendar 对象</span></span><br><span class="line">    Calendar calendar = Calendar.getInstance();</span><br><span class="line">    System.out.println(calendar.getTime().toLocaleString());</span><br><span class="line">    <span class="comment">// 2. 获取时间信息</span></span><br><span class="line">    <span class="comment">// 获取年</span></span><br><span class="line">    <span class="keyword">int</span> year = calendar.get(Calendar.YEAR);</span><br><span class="line">    <span class="comment">// 获取月 从 0 - 11</span></span><br><span class="line">    <span class="keyword">int</span> month = calendar.get(Calendar.MONTH);</span><br><span class="line">    <span class="comment">// 日</span></span><br><span class="line">    <span class="keyword">int</span> day = calendar.get(Calendar.DAY_OF_MONTH);</span><br><span class="line">    <span class="comment">// 小时</span></span><br><span class="line">    <span class="keyword">int</span> hour = calendar.get(Calendar.HOUR_OF_DAY);</span><br><span class="line">    <span class="comment">// 分钟</span></span><br><span class="line">    <span class="keyword">int</span> minute = calendar.get(Calendar.MINUTE);</span><br><span class="line">    <span class="comment">// 秒</span></span><br><span class="line">    <span class="keyword">int</span> second = calendar.get(Calendar.SECOND);</span><br><span class="line">    <span class="comment">// 3. 修改时间</span></span><br><span class="line">    Calendar calendar2 = Calendar.getInstance();</span><br><span class="line">    calendar2.set(Calendar.DAY_OF_MONTH, x);</span><br><span class="line">    <span class="comment">// 4. add修改时间</span></span><br><span class="line">    calendar2.add(Calendar.HOUR, x); <span class="comment">// x为正就加 负就减</span></span><br><span class="line">    <span class="comment">// 5. 补充方法</span></span><br><span class="line">    <span class="keyword">int</span> max = calendar2.getActualMaximum(Calendar.DAY_OF_MONTH);<span class="comment">// 月数最大天数</span></span><br><span class="line">    <span class="keyword">int</span> min = calendar2.getActualMinimum(Calendar.DAY_OF_MONTH);    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SimpleDateFormat"><a href="#SimpleDateFormat" class="headerlink" title="SimpleDateFormat"></a>SimpleDateFormat</h2><ul><li>SimpleDateFormat是一个以与语言环境有关的方式来格式化和解析日期的具体类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ParseException </span>&#123;</span><br><span class="line">    <span class="comment">// 1. 创建对象</span></span><br><span class="line">    SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy/MM/dd HH-mm-ss&quot;</span>);</span><br><span class="line">    <span class="comment">// 2. 创建Date</span></span><br><span class="line">    Date date = <span class="keyword">new</span> Date();</span><br><span class="line">    <span class="comment">// 格式化date（日期→字符串）</span></span><br><span class="line">    String str = sdf.format(date);</span><br><span class="line">    System.out.println(str);</span><br><span class="line">    <span class="comment">// 解析（字符串→时间）</span></span><br><span class="line">    Date date2 = sdf.parse(<span class="string">&quot;1948/03/12&quot;</span>);</span><br><span class="line">    System.out.println(date2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="System"><a href="#System" class="headerlink" title="System"></a>System</h2><ul><li>主要用于获取系统的属性数据和其他操作，构造方法私有的</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//arraycopy 复制</span></span><br><span class="line">    <span class="comment">//src-原数组 srcPos-从哪个位置开始复制0 dest-目标数组 destPos-目标数组的位置 length-复制的长度</span></span><br><span class="line">    <span class="keyword">int</span>[] arr = &#123;<span class="number">20</span>, <span class="number">18</span>, <span class="number">39</span>, <span class="number">3</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span>[] dest = <span class="keyword">new</span> <span class="keyword">int</span> [<span class="number">4</span>];</span><br><span class="line">    <span class="comment">//System.arraycopy(src, srcPos, dest, destPos, length);</span></span><br><span class="line">    System.arraycopy(arr, <span class="number">0</span>, dest, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i : dest) &#123;</span><br><span class="line">        System.out.println(i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回当前系统时间(毫秒)</span></span><br><span class="line">    System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Arrays.copyOf(original, newLength)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;内部类&quot;&gt;&lt;a href=&quot;#内部类&quot; class=&quot;headerlink&quot; title=&quot;内部类&quot;&gt;&lt;/a&gt;内部类&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;概念：在一个类的内部再定义一个完整的类，当外部类与内部类的属性重名时，优先访问内部类属性&lt;/li&gt;
&lt;li&gt;分类：成员内</summary>
      
    
    
    
    <category term="编程学习" scheme="https://jcxiaozhan.gitee.io/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="Java" scheme="https://jcxiaozhan.gitee.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Hibernate的简单入门使用</title>
    <link href="https://jcxiaozhan.gitee.io/2021/07/07/Hibernate%E7%9A%84%E7%AE%80%E5%8D%95%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/"/>
    <id>https://jcxiaozhan.gitee.io/2021/07/07/Hibernate%E7%9A%84%E7%AE%80%E5%8D%95%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/</id>
    <published>2021-07-06T16:00:00.000Z</published>
    <updated>2021-08-29T18:46:22.898Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是Hibernate"><a href="#什么是Hibernate" class="headerlink" title="什么是Hibernate"></a>什么是Hibernate</h2><blockquote><p>Hibernate是一个开放源代码的<code>对象关系映射框架</code>，它对JDBC进行了非常轻量级的对象封装，它将POJO与数据库表建立映射关系，是一个全自动的orm框架，hibernate可以自动生成SQL语句，自动执行，使得Java程序员可以随心所欲的使用对象编程思维来操纵数据库。 Hibernate可以应用在任何使用JDBC的场合，既可以在Java的客户端程序使用，也可以在Servlet/JSP的Web应用中使用，最具革命意义的是，Hibernate可以在应用EJB的JavaEE架构中取代CMP，完成数据持久化的重任。</p></blockquote><h2 id="Hibernate的简单使用-Springboot项目"><a href="#Hibernate的简单使用-Springboot项目" class="headerlink" title="Hibernate的简单使用(Springboot项目)"></a>Hibernate的简单使用(Springboot项目)</h2><h3 id="pom文件引入jar包"><a href="#pom文件引入jar包" class="headerlink" title="pom文件引入jar包"></a>pom文件引入jar包</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Springboot配置数据库信息"><a href="#Springboot配置数据库信息" class="headerlink" title="Springboot配置数据库信息"></a>Springboot配置数据库信息</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/webapp1901</span></span><br><span class="line"><span class="meta">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="meta">spring.datasource.username</span>=<span class="string">admin</span></span><br><span class="line"><span class="meta">spring.datasource.password</span>=<span class="string">123456</span></span><br><span class="line"></span><br><span class="line"><span class="meta">spring.jpa.hibernate.naming.physical-strategy</span>=<span class="string">org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl</span></span><br></pre></td></tr></table></figure><h3 id="idea连接Mysql数据库"><a href="#idea连接Mysql数据库" class="headerlink" title="idea连接Mysql数据库"></a>idea连接Mysql数据库</h3><p>配置方法请参考百度教程(<a href="https://jingyan.baidu.com/article/a378c960ea8a1eb3282830c1.html">点此前往</a>)，配置成功后，可以在右侧工具栏查看自己的数据库</p><img src="https://img.jcxiaozhan.top/Hibernate%E5%85%A5%E9%97%A8%E4%B8%80.jpg" style="text-align:center;"><h3 id="配置Hibernate"><a href="#配置Hibernate" class="headerlink" title="配置Hibernate"></a>配置Hibernate</h3><p>打开idea项目结构，添加Hibernate</p><img src="https://img.jcxiaozhan.top/Hibernate%E5%85%A5%E9%97%A8%E4%BA%8C.jpg" style="text-align:center;"><p>添加xml配置文件</p><img src="https://img.jcxiaozhan.top/Hibernate%E5%85%A5%E9%97%A8%E4%B8%89.jpg" style="text-align:center;"><h3 id="生成实体类"><a href="#生成实体类" class="headerlink" title="生成实体类"></a>生成实体类</h3><p>打开工具栏配置，找到生成持久层映射这一项</p><img src="https://img.jcxiaozhan.top/Hibernate%E5%85%A5%E9%97%A8%E5%9B%9B.jpg" style="text-align:center;"><p>如图配置实体类生成规则</p><img src="https://img.jcxiaozhan.top/Hibernate%E5%85%A5%E9%97%A8%E5%85%AD.jpg" style="text-align:center;"><p>选择实体类生成位置</p><img src="https://img.jcxiaozhan.top/Hibernate%E5%85%A5%E9%97%A8%E4%B8%83.jpg" style="text-align:center;"><p><code>Hibernate为我们生成了实体类，要注意的是，你可能会碰到生成的实体类报红的问题，它将表中int(11)的字段生成为了Long类型，需要手动更正一下</code></p><img src="https://img.jcxiaozhan.top/Hibernate%E5%85%A5%E9%97%A8%E5%85%AB.jpg" style="text-align:center;"><h3 id="创建Dao文件"><a href="#创建Dao文件" class="headerlink" title="创建Dao文件"></a>创建Dao文件</h3><p>继承Hibernate提供的CrudRepository类就可实现基本的增删改查</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.com.scitc.webapp3.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.com.scitc.webapp3.pojo.Manager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.repository.CrudRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ManagerDao</span> <span class="keyword">extends</span> <span class="title">CrudRepository</span>&lt;<span class="title">Manager</span>,<span class="title">Integer</span>&gt; </span>&#123;</span><br><span class="line"><span class="comment">// CrudRepository泛型第一个值为实体类，第二个值为你的表的主键类型</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编写测试类"><a href="#编写测试类" class="headerlink" title="编写测试类"></a>编写测试类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.com.scitc.webapp3.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.com.scitc.webapp3.pojo.Manager;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Assertions;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Optional;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ManagerDaoTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ManagerDao managerDao;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Logger logger = LoggerFactory.getLogger(getClass());</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findById</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Optional&lt;Manager&gt; obj = managerDao.findById(<span class="number">1</span>);</span><br><span class="line">        Manager manager = obj.get();</span><br><span class="line">        logger.info(manager.getLoginId());</span><br><span class="line">        Assertions.assertEquals(<span class="string">&quot;JohnCena&quot;</span>,manager.getLoginId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Iterable&lt;Manager&gt; list = managerDao.findAll();</span><br><span class="line">        <span class="keyword">for</span> (Manager manager : list) &#123;</span><br><span class="line">            System.out.println(manager.getRealName());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Hibernate中将insert和update合并成了一个save方法，它会根据主键自动判断是增加还是修改操作</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Manager manager = <span class="keyword">new</span> Manager();</span><br><span class="line">        manager.setId(<span class="number">2</span>);</span><br><span class="line">        manager.setLoginId(<span class="string">&quot;Admin&quot;</span>);</span><br><span class="line">        manager.setRealName(<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">        manager.setPwd(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        manager.setLoginCount(<span class="number">88</span>);</span><br><span class="line">        manager.setLastLoginDt(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">       managerDao.save(manager);</span><br><span class="line">        Manager manager1 = managerDao.findById(<span class="number">2</span>).get();</span><br><span class="line">        logger.info(manager1.getRealName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Manager manager = <span class="keyword">new</span> Manager();</span><br><span class="line">        manager.setId(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        managerDao.delete(manager);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Manager manager = <span class="keyword">new</span> Manager();</span><br><span class="line">        manager.setId(<span class="number">2</span>);</span><br><span class="line">        manager.setLoginId(<span class="string">&quot;Admin&quot;</span>);</span><br><span class="line">        manager.setRealName(<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">        manager.setPwd(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        manager.setLoginCount(<span class="number">88</span>);</span><br><span class="line">        manager.setLastLoginDt(<span class="keyword">null</span>);</span><br><span class="line">        managerDao.save(manager);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteByIds</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;Integer&gt; ids = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        ids.add(<span class="number">2</span>);</span><br><span class="line">        ids.add(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        managerDao.deleteAllById(ids);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findByLoginId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Manager manager = managerDao.findByLoginId(<span class="string">&quot;JohnCena&quot;</span>);</span><br><span class="line">        Assertions.assertEquals(<span class="string">&quot;张三&quot;</span>,manager.getRealName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;什么是Hibernate&quot;&gt;&lt;a href=&quot;#什么是Hibernate&quot; class=&quot;headerlink&quot; title=&quot;什么是Hibernate&quot;&gt;&lt;/a&gt;什么是Hibernate&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Hibernate是一个开放源代码</summary>
      
    
    
    
    <category term="编程学习" scheme="https://jcxiaozhan.gitee.io/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="Java" scheme="https://jcxiaozhan.gitee.io/tags/Java/"/>
    
    <category term="Hibernate" scheme="https://jcxiaozhan.gitee.io/tags/Hibernate/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis的简单入门使用</title>
    <link href="https://jcxiaozhan.gitee.io/2021/05/31/Mybatis%E7%9A%84%E7%AE%80%E5%8D%95%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/"/>
    <id>https://jcxiaozhan.gitee.io/2021/05/31/Mybatis%E7%9A%84%E7%AE%80%E5%8D%95%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/</id>
    <published>2021-05-30T16:00:00.000Z</published>
    <updated>2021-08-29T18:39:10.320Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是Mybatis"><a href="#什么是Mybatis" class="headerlink" title="什么是Mybatis"></a>什么是Mybatis</h2><blockquote><p>MyBatis 是一款优秀的<code>持久层框架</code>，它支持自定义 SQL、存储过程以及高级映射。MyBatis 免除了几乎所有的 JDBC 代码以及设置参数和获取结果集的工作。MyBatis 可以通过简单的 XML 或注解来配置和映射原始类型、接口和 Java POJO（Plain Old Java Objects，普通老式 Java 对象）为数据库中的记录。</p></blockquote><h2 id="持久化"><a href="#持久化" class="headerlink" title="持久化"></a>持久化</h2><ul><li>因为内存有断电即失的特性，所以需要进行数据持久化</li><li>持久化就是将程序的数据在持久状态和瞬时状态转化的过程</li></ul><h2 id="持久层"><a href="#持久层" class="headerlink" title="持久层"></a>持久层</h2><p>持久层，可以理解成数据保存在数据库或者硬盘一类可以保存很长时间的设备里面，不像放在内存中那样断电就消失了，也就是把数据存在持久化设备上</p><h2 id="Mybatis的简单使用-Maven项目"><a href="#Mybatis的简单使用-Maven项目" class="headerlink" title="Mybatis的简单使用(Maven项目)"></a>Mybatis的简单使用(Maven项目)</h2><h3 id="pom文件引入jar包"><a href="#pom文件引入jar包" class="headerlink" title="pom文件引入jar包"></a>pom文件引入jar包</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.38<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="创建工具类"><a href="#创建工具类" class="headerlink" title="创建工具类"></a>创建工具类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.com.scitc.mybatis.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisUtil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        InputStream inputStream = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//用输入流来读取xml文件</span></span><br><span class="line">            inputStream = Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//创建SqlSession工厂</span></span><br><span class="line">        sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">getSqlSession</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//创建并返回SqlSession</span></span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactory.openSession();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建实体类"><a href="#创建实体类" class="headerlink" title="创建实体类"></a>创建实体类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.com.scitc.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String mobile;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMobile</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mobile;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMobile</span><span class="params">(String mobile)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mobile = mobile;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建mybatis配置文件"><a href="#创建mybatis配置文件" class="headerlink" title="创建mybatis配置文件"></a>创建mybatis配置文件</h3><p><code>mybatis-config.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- JDBC配置 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/webapp1901&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;lishuang001219&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 绑定Mapper配置文件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;UserMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- resource下的Mapper资源存在多层目录结构时的写法 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;cn/com/scitc/webapp1901/mapper/UserMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="创建Mapper接口文件"><a href="#创建Mapper接口文件" class="headerlink" title="创建Mapper接口文件"></a>创建Mapper接口文件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.com.scitc.test.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.com.scitc.test.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建Mapper配置文件"><a href="#创建Mapper配置文件" class="headerlink" title="创建Mapper配置文件"></a>创建Mapper配置文件</h3><p><code>UserMapper.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- namespace命名空间：对应一个Mapper接口 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;cn.com.scitc.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- sql语句 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- id对应接口中定义的方法 resultType表示结果集类型 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectUser&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;cn.com.scitc.model.User&quot;</span>&gt;</span></span><br><span class="line">        select * from user where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="创建Dao文件"><a href="#创建Dao文件" class="headerlink" title="创建Dao文件"></a>创建Dao文件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.com.scitc.test.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.com.scitc.test.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> cn.com.scitc.test.pojo.User;</span><br><span class="line"><span class="keyword">import</span> cn.com.scitc.test.utils.MybatisUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDao</span> <span class="keyword">implements</span> <span class="title">UserMapper</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取SqlSession</span></span><br><span class="line">        <span class="keyword">try</span>(SqlSession session = MybatisUtils.getSqlSession())&#123;</span><br><span class="line">            <span class="comment">//获取Mapper，执行其中方法</span></span><br><span class="line">            UserMapper mapper = session.getMapper(UserMapper.class);</span><br><span class="line">            <span class="keyword">return</span> mapper.findById(id);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编写测试类"><a href="#编写测试类" class="headerlink" title="编写测试类"></a>编写测试类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.com.scitc.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.com.scitc.test.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> cn.com.scitc.test.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Assertions;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserDaoTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">findById</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        UserDao userDao = <span class="keyword">new</span> UserDao();</span><br><span class="line">        User user = userDao.findById(<span class="number">1</span>);</span><br><span class="line">        System.out.println(user.getName());</span><br><span class="line">        Assertions.assertEquals(<span class="string">&quot;张三&quot;</span>,user.getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="项目基本结构"><a href="#项目基本结构" class="headerlink" title="项目基本结构"></a>项目基本结构</h2><img src="https://img.jcxiaozhan.top/Mybatis%E5%85%A5%E9%97%A8%E4%B8%80.jpg" style="height:400px;width:300px;text-align:center;"><h2 id="mybatis-generator的简单使用"><a href="#mybatis-generator的简单使用" class="headerlink" title="mybatis-generator的简单使用"></a>mybatis-generator的简单使用</h2><div class="note warning flat"><p>注：此插件主要用于自动生成实体类、Mapper接口和Mapper配置文件。mybatis配置文件和Dao层文件需要根据实际应用场景对照生成的文件自行编写</p></div><h3 id="编写pom文件"><a href="#编写pom文件" class="headerlink" title="编写pom文件"></a>编写pom文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.38<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 添加插件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>Generate MyBatis Artifacts<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>generate<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置生成的文件覆盖源文件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">overwrite</span>&gt;</span>true<span class="tag">&lt;/<span class="name">overwrite</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="编写mybatis-generator配置文件"><a href="#编写mybatis-generator配置文件" class="headerlink" title="编写mybatis-generator配置文件"></a>编写mybatis-generator配置文件</h3><p><code>generatorConfig.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">generatorConfiguration</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">&quot;simple&quot;</span> <span class="attr">targetRuntime</span>=<span class="string">&quot;MyBatis3Simple&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">connectionURL</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/webapp1901&quot;</span> <span class="attr">userId</span>=<span class="string">&quot;root&quot;</span> <span class="attr">password</span>=<span class="string">&quot;lishuang001219&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--实体存放位置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;cn.com.scitc.webapp1901.pojo&quot;</span> <span class="attr">targetProject</span>=<span class="string">&quot;src/main/java&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Mapper.xml存放位置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;cn.com.scitc.webapp1901.mapper&quot;</span> <span class="attr">targetProject</span>=<span class="string">&quot;src/main/resources&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Mapper接口存放位置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">type</span>=<span class="string">&quot;XMLMAPPER&quot;</span> <span class="attr">targetPackage</span>=<span class="string">&quot;cn.com.scitc.webapp1901.mapper&quot;</span> <span class="attr">targetProject</span>=<span class="string">&quot;src/main/java&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--需要生成的表--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;student&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="双击一键生成代码"><a href="#双击一键生成代码" class="headerlink" title="双击一键生成代码"></a>双击一键生成代码</h3><img src="https://img.jcxiaozhan.top/Mybatis%E5%85%A5%E9%97%A8%E4%BA%8C.jpg" style="height:300px;width:500px;text-align:center;">]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;什么是Mybatis&quot;&gt;&lt;a href=&quot;#什么是Mybatis&quot; class=&quot;headerlink&quot; title=&quot;什么是Mybatis&quot;&gt;&lt;/a&gt;什么是Mybatis&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;MyBatis 是一款优秀的&lt;code&gt;持久层框架</summary>
      
    
    
    
    <category term="编程学习" scheme="https://jcxiaozhan.gitee.io/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="Java" scheme="https://jcxiaozhan.gitee.io/tags/Java/"/>
    
    <category term="Mybatis" scheme="https://jcxiaozhan.gitee.io/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>稀疏数组</title>
    <link href="https://jcxiaozhan.gitee.io/2021/02/19/%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84/"/>
    <id>https://jcxiaozhan.gitee.io/2021/02/19/%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84/</id>
    <published>2021-02-18T16:00:00.000Z</published>
    <updated>2021-02-19T08:16:55.569Z</updated>
    
    <content type="html"><![CDATA[<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><ul><li>稀疏数组是经过特殊处理后的二维数组。</li><li>当一个二维数组中存在大量相同值的时候，可以考虑转换为稀疏数组来进行存储，从而达到节省内存空间的目的。</li><li>二维数组中存在的大量相同值我们称之为<code>无效值</code>，除开无效值，剩下的就是<code>有效值</code>。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">0 0 0 0 0 0 0 0 0 0           </span><br><span class="line">0 0 2 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0                                             10 10 2</span><br><span class="line">0 0 0 5 0 0 0 0 0 0                 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&gt;                     1  2  2</span><br><span class="line">0 0 0 0 0 0 0 0 0 0                                             4  3  5</span><br><span class="line">0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0</span><br><span class="line"></span><br><span class="line">存有大量相同值的二维数组                                     处理后形成的稀疏数组</span><br></pre></td></tr></table></figure><h2 id="存储规则"><a href="#存储规则" class="headerlink" title="存储规则"></a>存储规则</h2><ol><li><p>稀疏数组第一行固定用于存储原数组信息，例如，我们存储的是一个3行4列，有1个有效值的数组，第一行就是<code>3 4 1</code></p></li><li><p>稀疏数组一定是一个n行3列的二维数组</p><ul><li>因为我们有多个有效值，每一个有效值，我们都需要用一行来进行存储，所以有n行</li><li>3列分别对应了有效值的行、列、值</li></ul></li></ol><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个10*10的二维数组，在数组存入两个有效值</span></span><br><span class="line"><span class="keyword">int</span>[][] array1 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line">array1[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">2</span>;</span><br><span class="line">array1[<span class="number">4</span>][<span class="number">3</span>] = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//我们打印一下，在控制台会看到如下一个二维数组</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        0 0 0 0 0 0 0 0 0 0 </span></span><br><span class="line"><span class="comment">        0 0 2 0 0 0 0 0 0 0 </span></span><br><span class="line"><span class="comment">        0 0 0 0 0 0 0 0 0 0 </span></span><br><span class="line"><span class="comment">        0 0 0 0 0 0 0 0 0 0 </span></span><br><span class="line"><span class="comment">        0 0 0 5 0 0 0 0 0 0 </span></span><br><span class="line"><span class="comment">        0 0 0 0 0 0 0 0 0 0 </span></span><br><span class="line"><span class="comment">        0 0 0 0 0 0 0 0 0 0 </span></span><br><span class="line"><span class="comment">        0 0 0 0 0 0 0 0 0 0 </span></span><br><span class="line"><span class="comment">        0 0 0 0 0 0 0 0 0 0 </span></span><br><span class="line"><span class="comment">        0 0 0 0 0 0 0 0 0 0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;array1.length;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>;j&lt;array1[i].length;j++)&#123;</span><br><span class="line">        System.out.print(array1[i][j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (j == array1[i].length-<span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取数组中有效值的个数</span></span><br><span class="line"><span class="comment">// 因为当前数组中初始值全部为0，所以这里不为0的就是我们的有效值，把它们筛选出来</span></span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; array1.length; i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; array1[i].length; j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(array1[i][j] != <span class="number">0</span>)&#123;</span><br><span class="line">            sum++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个稀疏数组</span></span><br><span class="line"><span class="comment">// 稀疏数组的第一行存放的是原数组的信息，所以稀疏数组的行数=有效值+1，列数3固定</span></span><br><span class="line"><span class="keyword">int</span>[][] array2 = <span class="keyword">new</span> <span class="keyword">int</span>[sum+<span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//用稀疏数组第一行，存放原数组的信息：行/列/有效值个数</span></span><br><span class="line">array2[<span class="number">0</span>][<span class="number">0</span>] = array1.length;</span><br><span class="line">array2[<span class="number">0</span>][<span class="number">1</span>] = array1[<span class="number">0</span>].length;</span><br><span class="line">array2[<span class="number">0</span>][<span class="number">2</span>] = sum;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 再次遍历二维数组，将有效值存入稀疏数组中</span></span><br><span class="line"><span class="comment">// count++的使用恰好让我们在存储有效值时跳过了第一行</span></span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; array1.length; i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; array1[i].length; j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(array1[i][j] != <span class="number">0</span>)&#123;</span><br><span class="line">            count++;</span><br><span class="line">            array2[count][<span class="number">0</span>] = i;</span><br><span class="line">            array2[count][<span class="number">1</span>] = j;</span><br><span class="line">            array2[count][<span class="number">2</span>] = array1[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 控制台打印查看一下我们转换完成的稀疏数组</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        10 10 2 </span></span><br><span class="line"><span class="comment">        1 2 2 </span></span><br><span class="line"><span class="comment">        4 3 5 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;array2.length;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>;j&lt;array2[i].length;j++)&#123;</span><br><span class="line">        System.out.print(array2[i][j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (j == array2[i].length-<span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//恢复</span></span><br><span class="line"><span class="comment">//1. 用稀疏数组中第一行信息创建二维数组</span></span><br><span class="line"><span class="keyword">int</span>[][] array3 = <span class="keyword">new</span> <span class="keyword">int</span>[array2[<span class="number">0</span>][<span class="number">0</span>]][array2[<span class="number">0</span>][<span class="number">1</span>]];</span><br><span class="line"><span class="comment">//2. 填充二维数组</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; array2.length;i++)&#123;</span><br><span class="line">    array3[array2[i][<span class="number">0</span>]][array2[i][<span class="number">1</span>]] = array2[i][<span class="number">2</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;稀疏数组是经过特殊处理后的二维数组。&lt;/li&gt;
&lt;li&gt;当一个二维数组中存在大量相同值的时候，可以考虑转换为稀疏数组来进行存储，</summary>
      
    
    
    
    <category term="编程学习" scheme="https://jcxiaozhan.gitee.io/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="Java" scheme="https://jcxiaozhan.gitee.io/tags/Java/"/>
    
    <category term="算法" scheme="https://jcxiaozhan.gitee.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>2020年终总结</title>
    <link href="https://jcxiaozhan.gitee.io/2020/12/31/2020%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    <id>https://jcxiaozhan.gitee.io/2020/12/31/2020%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</id>
    <published>2020-12-30T16:00:00.000Z</published>
    <updated>2020-12-31T14:08:01.456Z</updated>
    
    <content type="html"><![CDATA[<p>2020年已经走到尾声了，马上就要迎来崭新的2021年了，其实也没什么好期待的，要说新年的美好祝愿吧，那就是希望家人身体健康，仅此而已。想了想，还是写一篇年终总结吧，我文笔不好，但就想着给我的2020年留下个痕迹，回头还能看一看，也算是记录了我的成长吧！</p><p>2020年过得很快，像是眨了了个眼，就要说告别了。2020年也刚好是我转到软件专业的第一年，当时的我兴奋、激动、满怀憧憬，还记得我跟我原室友是这样讲的，我说：“如果没转成功，我真的没有读下去的必要了！”这一次很幸运，我成功转到了软件专业，还高兴地请我的原室友们吃了顿火锅。</p><p>在软件专业的第一个学期(也就是今年上半年)，因为突然爆发疫情的原因，只能在家中上网课，隔着屏幕与老师同学们交流学习，我很清楚自己的处境，我不过就是一个软件专业的小白，零基础，跟人家学了一个学期的根本没法比，所以我每一堂课都听得很认真，一边敲代码，一边做笔记，聚精会神，生怕遗漏了什么。对于我们班导师晖哥提出的一些专业相关的东西，让我们了解的，我都会在课下去查一查，了解一下，学习一下。每天上课老师讲的是我所感兴趣的东西，所以我充满干劲。期末成绩也算是给了自己一个满意的交代，专业排名20，虽然不算优秀，但是跟有基础的同学相比，我已经算满意了，至少证明老师讲的知识我能听明白，并且在渐渐地缩短与同学们的差距。</p><p>今年的疫情，导致我们过了一次长达半年的寒假，那是一段我不想再经历的日子，每天看见感染人数成百上千地增加，我们只能无助地在家里待着，听指挥，不乱跑成了我们为祖国出力的唯一方式。疫情的最前线，无数的医疗工作者夜以继日地战斗着，最终我们还是赢得了胜利，复工复产已经稳定。再看看美国这个资本大国，每天还处在水生火热之中，感染人数还在十几二十万地增长着，真幸运作为一个中国人，生活在社会主义国家。</p><p>从今年3月搭建了我的第一个博客开始，大部分的心思都用在自己的小网站上了，可能是因为个人网站可以花费相对较少的时间来获得极大的成就感吧。时间证明了我的这部分投入是值得的，通过交换友链，我了结识到一个又一个博主，他们和我年龄相仿，大部分都是学生，但大部分又比我优秀，成为和他们一样优秀的人渐渐成了我的目标。我自认跟以前相比，现在的我学习上已经很努力了，而且在兴趣的驱使下，我在课下做自我学习的时间占了我课余时间的大部分，可带来的效果却不尽人意，有时候会产生失落感，但是当我缓过来之后，又会开始向前奔跑。很早之前，早在中学时代，我就想学计算机，从事互联网相关工作，现在的我，刚刚踏进了这个大门，所以我绝对不会放弃，还有太多太多的东西等着我去学习。</p><p>总的来说，今年的疫情，加速了一整年的进度，一切都显得忙碌。而从自身来讲，我能力的提升可能不那么明显，倒是思想渐渐成熟起来，我不再沉迷于游戏带来的短暂快乐，我所做的努力都是在为我的将来铺路，很多事情，不再任性，对于父母、家庭，也多出一份责任感来，那个父母庇护下的孩子，这一年真正地成长了。</p><p>再见2020，你好2021</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2020年已经走到尾声了，马上就要迎来崭新的2021年了，其实也没什么好期待的，要说新年的美好祝愿吧，那就是希望家人身体健康，仅此而已。想了想，还是写一篇年终总结吧，我文笔不好，但就想着给我的2020年留下个痕迹，回头还能看一看，也算是记录了我的成长吧！&lt;/p&gt;
&lt;p&gt;20</summary>
      
    
    
    
    <category term="闲谈" scheme="https://jcxiaozhan.gitee.io/categories/%E9%97%B2%E8%B0%88/"/>
    
    
    <category term="年终总结" scheme="https://jcxiaozhan.gitee.io/tags/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>从零开始，搭建个人博客(二)</title>
    <link href="https://jcxiaozhan.gitee.io/2020/10/05/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%20(%E4%BA%8C)/"/>
    <id>https://jcxiaozhan.gitee.io/2020/10/05/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%20(%E4%BA%8C)/</id>
    <published>2020-10-04T16:00:00.000Z</published>
    <updated>2021-08-29T18:37:23.375Z</updated>
    
    <content type="html"><![CDATA[<div class="note success flat"><p>文章更新于2020年11月30日，更正了一些小问题，保证了本教程的可行性与可靠性</p></div><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前写过一篇网站搭建的文章，那是我最初搭建博客的方式，很方便、快捷，但是，即便我购买的是相对较便宜的学生机，每年在服务器和域名上都要花上一百多块钱，作为没有稳定收入的学生群体，我反正是觉得不值的，所以后来用了免费的方式搭建了现在这个静态博客，当然如果你认为每年为博客投入一定钱来续费服务器和域名是值得的，也可以看看我的上一篇搭建文章，<a href="https://jcxiaozhan.gitee.io/2020/05/29/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%20(%E4%B8%80)/">《从零开始，搭建个人博客(一)》</a>，也许会给你带来一些帮助。</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ol><li>一个码云账号，<a href="https://gitee.com/">前往注册</a></li><li>Node工具，<a href="https://nodejs.org/en/">点击下载</a></li><li>Git工具，<a href="https://git-scm.com/">点击下载</a></li></ol><h2 id="搭建教程"><a href="#搭建教程" class="headerlink" title="搭建教程"></a>搭建教程</h2><h3 id="安装Node"><a href="#安装Node" class="headerlink" title="安装Node"></a>安装Node</h3><p>Node在官网下载安装包手动安装即可，安装完成后，用键盘win+R，输入cmd打开终端，依次输入以下两条命令,如图显示版本号，即表示安装成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure><img src="https://img.jcxiaozhan.top/Hexo%E6%90%AD%E7%AB%99%E4%B8%80.jpg"><h3 id="安装cnpm"><a href="#安装cnpm" class="headerlink" title="安装cnpm"></a>安装cnpm</h3><p>npm是一个包管理工具，由于它安装速度慢，所以我们通过cnpm来代替npm进行依赖的安装，用以下命令安装cnpm</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>稍等片刻即可安装成功,然后我们输入以下命令，如图显示版本信息，即表示安装成功了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm -v</span><br></pre></td></tr></table></figure><img src="https://img.jcxiaozhan.top/Hexo%E6%90%AD%E7%AB%99%E4%BA%8C.jpg" width="80%"><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>用以下命令安装Hexo博客框架</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>同样我们使用以下命令验证一下，如图显示版本信息，即表示Hexo博客框架安装成功，之后我们就可以开始使用Hexo博客框架来部署博客了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><img src="https://img.jcxiaozhan.top/Hexo%E6%90%AD%E7%AB%99%E4%B8%89.jpg"><h3 id="初始化博客"><a href="#初始化博客" class="headerlink" title="初始化博客"></a>初始化博客</h3><p>首先在电脑任意地方新建一个空文件夹，作为我们博客的根目录，然后我们在新建的文件夹中右键打开Git命令行，并确保后续命令操作是在博客根目录下进行的</p><img src="https://img.jcxiaozhan.top/Hexo%E6%90%AD%E7%AB%99%E5%9B%9B.jpg" width="80%"><p>我们用以下命令初始化博客根目录，其实就是克隆github上的仓库到本地</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><img src="https://img.jcxiaozhan.top/Hexo%E6%90%AD%E7%AB%99%E4%BA%94.jpg"><p style="text-align:center">终端提示初始化成功</p><img src="https://img.jcxiaozhan.top/Hexo%E6%90%AD%E7%AB%99%E5%85%AD.jpg"><p style="text-align:center">博客根目录自动生成了文件</p><p>用以下命令，启动本地预览,访问地址<span><a href="http://localhost:4000/">http://localhost:4000/</a></span>，即可看到一个初始化的博客页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><img src="https://img.jcxiaozhan.top/Hexo%E6%90%AD%E7%AB%99%E4%B8%83.jpg"><h3 id="部署博客"><a href="#部署博客" class="headerlink" title="部署博客"></a>部署博客</h3><p>当然，博客不可能是只放在自己电脑上的，所以我们要把它部署到码云上，这样别人才能访问它</p><p>登录码云，查看个人信息，保证图中两个用户名是一致的，不一致请进行更改</p><img src="https://img.jcxiaozhan.top/Hexo%E6%90%AD%E7%AB%99%28%E8%A1%A5%E4%B8%83%E5%90%8E%29.jpg"><p>新建公开仓库，路径对照归属填写，必须严格按照此格式，不然会影响网站访问，其它选项默认即可</p><img src="https://img.jcxiaozhan.top/Hexo%E6%90%AD%E7%AB%99%E5%85%AB.jpg"><p>之后我们回到博客根目录打开Git命令行，输入以下命令，安装一个Git部署插件。如果安装过程中出现问题，导致安装失败，用我提供的这个也是可以的，将压缩包解压到博客根目录即可，<a href="https://wwa.lanzoui.com/b0eq5auwd">Git部署插件</a>，密码：a7j2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure><p>等待安装完成后，我们打开博客根目录下的<code>_config.yml</code>这个文件，划到文件最底部，在repo后面填写自己的码云仓库地址</p><img src="https://img.jcxiaozhan.top/Hexo%E6%90%AD%E7%AB%99%E4%B9%9D.jpg"><p>用以下命令将本地博客推向码云仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>在仓库开启Gitee Pages服务，要注意的是，<code>以后我们更新博客，每一次推送到远端仓库后都要手动更新一下Gitee Pages页面</code></p><img src="https://img.jcxiaozhan.top/Hexo%E6%90%AD%E7%AB%99%E5%8D%81.jpg"><p>至此，我们的Hexo博客就已经搭建成功了，Gitee Pages页面提供的网址就是我们的站点地址</p><img src="https://img.jcxiaozhan.top/Hexo%E6%90%AD%E7%AB%99%E5%8D%81%E4%B8%80.jpg"><h2 id="博客发布流程"><a href="#博客发布流程" class="headerlink" title="博客发布流程"></a>博客发布流程</h2><p>在博客根目录下<code>/source/_posts</code>路径下，存放的是我们的博客文章，都是Markdown格式的</p><ol><li><p>在本地更新博客后，先用以下命令清除一下之前生成的文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure></li><li><p>再用以下命令打开本地服务器，进入<a href="http://localhost:4000/">http://localhost:4000</a><span>进行本地预览</span></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></li><li><p>确认无误后，用以下命令推向远端仓库，别忘记到Gitee Pages页面手动更新一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure></li></ol><h2 id="博客主题"><a href="#博客主题" class="headerlink" title="博客主题"></a>博客主题</h2><p>博客系统的默认主题一般都是很丑的，Hexo的也不例外，所以难免我们要更换主题</p><p>Hexo博客的主题是放在根目录的<code>/themes</code>路径下的，你可以去网上下载喜欢的主题，然后修改博客根目录下<code>_config.yml</code>文件中theme这一项为主题名即可</p><p>本博客用的Butterfly主题，你可以按照官方文档进行下载、配置、使用，<a href="https://butterfly.js.org/posts/21cfbf15/">主题传送门</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note success flat&quot;&gt;&lt;p&gt;文章更新于2020年11月30日，更正了一些小问题，保证了本教程的可行性与可靠性&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前</summary>
      
    
    
    
    <category term="网站建设" scheme="https://jcxiaozhan.gitee.io/categories/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    
    <category term="网站建设" scheme="https://jcxiaozhan.gitee.io/tags/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    <category term="Hexo" scheme="https://jcxiaozhan.gitee.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>用Markdown写出一篇漂亮的博客</title>
    <link href="https://jcxiaozhan.gitee.io/2020/07/31/%E7%94%A8Markdown%E5%86%99%E5%87%BA%E4%B8%80%E7%AF%87%E6%BC%82%E4%BA%AE%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <id>https://jcxiaozhan.gitee.io/2020/07/31/%E7%94%A8Markdown%E5%86%99%E5%87%BA%E4%B8%80%E7%AF%87%E6%BC%82%E4%BA%AE%E7%9A%84%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-07-30T16:00:00.000Z</published>
    <updated>2021-08-29T17:22:31.374Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>昨天和一个学长聊到写博客的问题，现在主流的博客系统，都已经支持使用Markdown语法编写博客了，但是任然有一些博客系统还是传统的html编辑器，通过源代码的形式来控制博客的排版，比如博主之前用的wordpress博客系统就是如此，Markdown格式写出来的博客还要通过一些特殊的方式，来转换成html代码来编辑发表，今天我就来教一下大家如何实现。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li>Visual Studio Code(VScode)编辑器，<a href="https://code.visualstudio.com/">点击下载</a></li><li>自学Markdown语法，推荐B站小马视频教学，<a href="https://www.bilibili.com/video/BV1xW411r7Nv">点击前往</a></li></ol><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><ol><li><p>在VScode的插件商店搜索Markdown Preview Enhanced进行安装即可，如下图所示。</p><img src="https://img.jcxiaozhan.top/%E5%86%99%E5%8D%9A%E5%AE%A2%E4%B8%80.jpg"></li><li><p>安装完成后在我们编写窗口的右上角会有一个点击预览markdown格式的小按钮，点击后会在右边新开一栏，实时预览我们用markdown格式编写的内容，十分方便，效果如下图所示。</p><img src="https://img.jcxiaozhan.top/%E5%86%99%E5%8D%9A%E5%AE%A2%E4%BA%8C.jpg"></li><li><p>当我们编写完成后，只需要在右边预览处点击鼠标右键，就会有另存为html格式的选项，然后我们再把html中body标签内的源码复制粘贴到博客后台，对格式微调，发表文章即可。</p><img src="https://img.jcxiaozhan.top/%E5%86%99%E5%8D%9A%E5%AE%A2%E4%B8%89.jpg"></li></ol><h2 id="多讲一句"><a href="#多讲一句" class="headerlink" title="多讲一句"></a>多讲一句</h2><p>Markdown语法，我建议大家都可以去学一学，首先它并不难，无非就是一些控制文本显示的东西，什么加粗、倾斜、下划线之类的,它整齐的排版用来记笔记、写文章都特别爽，总之，非常推荐，感兴趣的朋友可以去了解、学习下！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;昨天和一个学长聊到写博客的问题，现在主流的博客系统，都已经支持使用Markdown语法编写博客了，但是任然有一些博客系统还是传统的html编</summary>
      
    
    
    
    <category term="网站建设" scheme="https://jcxiaozhan.gitee.io/categories/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    
    <category term="网站建设" scheme="https://jcxiaozhan.gitee.io/tags/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    <category term="Markdown" scheme="https://jcxiaozhan.gitee.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>从零开始，搭建个人博客(一)</title>
    <link href="https://jcxiaozhan.gitee.io/2020/05/29/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%20(%E4%B8%80)/"/>
    <id>https://jcxiaozhan.gitee.io/2020/05/29/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%20(%E4%B8%80)/</id>
    <published>2020-05-28T16:00:00.000Z</published>
    <updated>2021-08-29T18:35:50.948Z</updated>
    
    <content type="html"><![CDATA[<div class="note success flat"><p>文章更新于2020年11月30日，补充了一些细节问题，保证了本教程的可行性与可靠性</p></div><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我的网站从搭建到现在，已经100来天了，一个月没发文章了，因为这个月，确实感觉没有学到什么东西，在家成天上网课，积极性也在慢慢减弱，这两天返校了，这星期没课，就想着，把之前没做的搭站教程做一做，实际上，步骤都忘得差不多了，当初搭建的时候也是跌跌撞撞，走了很多弯路，最后也不知道怎么就捣鼓出来了，这次又写教程，算是又从零开始了，各位就随便看看吧。</p><h2 id="网站搭建的三大部分"><a href="#网站搭建的三大部分" class="headerlink" title="网站搭建的三大部分"></a>网站搭建的三大部分</h2><ul><li>服务器<br>网站的搭建基于服务器，只有网站文件只有放在服务器上，才能被他人访问</li><li>域名<br>域名，也就是我们常说的网址，用于查找服务器IP来达到访问网站的目的，同时也方便我们记忆</li><li>环境配置<br>有了前两项，只有配置好服务器后台，网站才成功被搭建</li></ul><h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><p>为什么先讲域名呢，因为大陆购买的域名都要经过备案才能使用，备案审核时间通常比较长，像博主自己的域名就用了1个月才通过备案，所以有心要搭建一个个人网站的小伙伴现在可以先去购买域名进行备案，早备案早通过。</p><p>越好的域名越贵，如果是用于个人网站的域名，其实不用买贵的，买一个经济实惠的就差不多了，这里推荐阿里云的域名，首年只要1元，<a href="https://wanwang.aliyun.com/domain/1yuan">阿里云域名购买地址</a>。</p><h2 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h2><h3 id="购买服务器"><a href="#购买服务器" class="headerlink" title="购买服务器"></a>购买服务器</h3><p>服务器有国外的和国内的，价格也有所不同，我们在国内搭建博客，所以一定是选择国内的服务器，这里推荐阿里云的轻量级服务器，网站搭建不需要服务器有多大的容量，所以我们买最便宜的就好，当然，如果你有钱的话，买大一点的服务器是完全没问题的。如下图，选择轻量级服务器，系统镜像ContOS，还有一点要说一下，服务器和域名最好选同一个公司的，会比较方便，比如你购买的是腾讯的服务器，那么建议你购买腾讯的域名。<a href="https://www.aliyun.com/minisite/goods?userCode=wh43ewj4">优惠券</a>，<a href="https://promotion.aliyun.com/ntms/act/campus2018.html">阿里云学生机</a>。</p><img src="https://img.jcxiaozhan.top/%E6%90%AD%E7%AB%99%E4%B8%80.jpg"><img src="https://img.jcxiaozhan.top/%E6%90%AD%E7%AB%99%E4%BA%8C.jpg"><h3 id="端口放行"><a href="#端口放行" class="headerlink" title="端口放行"></a>端口放行</h3><p>购买好服务器后，服务器防火墙，放行80、443端口，将购买的域名与服务器进行绑定解析，具体可在网上查找域名解析的教程</p><img src="https://img.jcxiaozhan.top/%E6%90%AD%E7%AB%99%28%E8%A1%A5%E4%BA%8C%E5%90%8E%29.jpg"><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><h3 id="安装宝塔面板"><a href="#安装宝塔面板" class="headerlink" title="安装宝塔面板"></a>安装宝塔面板</h3><p>在阿里云网页上将购买的服务器进行远程连接，进入命令界面，输入如下命令，安装宝塔面板</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http:&#x2F;&#x2F;download.bt.cn&#x2F;install&#x2F;install_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure><img src="https://img.jcxiaozhan.top/%E6%90%AD%E7%AB%99%28%E8%A1%A5%E4%B8%89%E5%89%8D%29.jpg"><p>等待几分钟后，出现如下界面，说明宝塔面板安装成功,红框部分是你的宝塔操作面板地址和默认用户名密码，用于登录宝塔面板</p><img src="https://img.jcxiaozhan.top/%E6%90%AD%E7%AB%99%E4%B8%89.jpg"><h3 id="安装集成环境"><a href="#安装集成环境" class="headerlink" title="安装集成环境"></a>安装集成环境</h3><p>登录宝塔面板，一键安装LNMP集成环境，时间较长，请耐心等待</p><img src="https://img.jcxiaozhan.top/%E6%90%AD%E7%AB%99%E5%9B%9B.jpg"><h3 id="修改宝塔账号密码"><a href="#修改宝塔账号密码" class="headerlink" title="修改宝塔账号密码"></a>修改宝塔账号密码</h3><p>为了安全，集成环境安装完成后，在面板设置里面修改一下账号密码</p><img src="https://img.jcxiaozhan.top/%E6%90%AD%E7%AB%99%E4%BA%94.jpg"><h3 id="部署wordpress博客"><a href="#部署wordpress博客" class="headerlink" title="部署wordpress博客"></a>部署wordpress博客</h3><p>在软件商店，找到wordpress一键部署，填写域名和备注即可</p><img src="https://img.jcxiaozhan.top/%E6%90%AD%E7%AB%99%E5%85%AD.jpg"><img src="https://img.jcxiaozhan.top/%E6%90%AD%E7%AB%99%E4%B8%83.jpg"><p>接下来就是对wordpress这个博客系统的操作了，合理地使用wordpress，去搭建属于你自己的博客吧！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note success flat&quot;&gt;&lt;p&gt;文章更新于2020年11月30日，补充了一些细节问题，保证了本教程的可行性与可靠性&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;</summary>
      
    
    
    
    <category term="网站建设" scheme="https://jcxiaozhan.gitee.io/categories/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    
    <category term="网站建设" scheme="https://jcxiaozhan.gitee.io/tags/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
  </entry>
  
  <entry>
    <title>关于NaN的一个小问题</title>
    <link href="https://jcxiaozhan.gitee.io/2020/04/24/%E5%85%B3%E4%BA%8ENaN%E7%9A%84%E4%B8%80%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98/"/>
    <id>https://jcxiaozhan.gitee.io/2020/04/24/%E5%85%B3%E4%BA%8ENaN%E7%9A%84%E4%B8%80%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98/</id>
    <published>2020-04-23T16:00:00.000Z</published>
    <updated>2021-08-29T17:01:45.786Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天在写js代码的时候，遇到一个小问题，也在百度上找了好半天，好像没有一模一样的解答，最后在一些大佬的关于NaN详解的文章里找到了答案，所以我想记录一下这次问题</p><p>下面这段是课堂上老师写的代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = input.value;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">Number</span>(str.charAt(<span class="number">0</span>)))&#123;</span><br><span class="line">    infoUserName.innerHTML = <span class="string">&quot;不能以数字开头&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码，执行时候是完全没有问题的，输入以数字开头的字符串，就会执行代码，出现提示。后来我再来看这段代码，就发现if中的判定条件是将第一个字符转化为数值，转化不了则会返回NaN,然后我就在想，无论转化后是数字还是NaN,都if无关，那么是怎么判断是否要执行代码的，于是，我将代码改了下，改成下面这样了。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = input.value;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">Number</span>(str.charAt(<span class="number">0</span>)) != <span class="literal">NaN</span>)&#123;</span><br><span class="line">    infoUserName.innerHTML = <span class="string">&quot;不能以数字开头&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从我认为来看，这样是完全合理的，判断转化值是否不等于NaN，这样他就会出现一个ture或者false，但是出现问题了，无论我输入是不是数字开头的字符串，都会出现提示。难道是数字、字母转化出来都为NaN？不可能吧，带着疑惑，我又写了下面这串代码来验证</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = init;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> str = <span class="string">&quot;sssssss&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="built_in">Number</span>(str.charAt(<span class="number">0</span>));</span><br><span class="line">    <span class="built_in">console</span>.log(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>控制台返回的结果为NaN,没错啊，为什么判定的时候就出问题了，我开始百度，找寻答案，最后问题解决了，从大佬们的文章中我知道了<code>NaN要严格地来说它的类型依旧是Number型，但是它跟任何数字或者字符(包括它自己)相比较得到的结果都会是false</code>，我理解为，它本身就有false的性质，所以当我输入字符时，他不会执行代码。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;今天在写js代码的时候，遇到一个小问题，也在百度上找了好半天，好像没有一模一样的解答，最后在一些大佬的关于NaN详解的文章里找到了答案，所以</summary>
      
    
    
    
    <category term="编程学习" scheme="https://jcxiaozhan.gitee.io/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="JavaScript" scheme="https://jcxiaozhan.gitee.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JSON基础</title>
    <link href="https://jcxiaozhan.gitee.io/2020/04/19/JSON%E5%9F%BA%E7%A1%80/"/>
    <id>https://jcxiaozhan.gitee.io/2020/04/19/JSON%E5%9F%BA%E7%A1%80/</id>
    <published>2020-04-18T16:00:00.000Z</published>
    <updated>2021-08-30T03:05:16.199Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天，我的JSON学习算是告一段落了，不过只是入门阶段，我只是掌握了一些基础语法，下面是我的学习笔记，有兴趣的小伙伴可以看一看，这不是一篇教程贴，但是如果你有基础的话，应该很容易看得懂，我只是想分享一下我的所学。</p><h2 id="JSON在线工具"><a href="#JSON在线工具" class="headerlink" title="JSON在线工具"></a>JSON在线工具</h2><p>一个可以在线编写JSON的网站</p><blockquote><p><a href="https://json.cn/">https://json.cn/</a></p></blockquote><h2 id="JSON是什么"><a href="#JSON是什么" class="headerlink" title="JSON是什么"></a>JSON是什么</h2><p>JSON，全称JavaScript Object Notation,即JavaScript对象标记法</p><p>JSON是存储和交换文本信息的语法，类似 XML</p><p>JSON是一种轻量级的、基于文本的、可读的格式，语法格式参考JavaScript对象，格式永不升级</p><h2 id="JSON语法规则"><a href="#JSON语法规则" class="headerlink" title="JSON语法规则"></a>JSON语法规则</h2><p>数组（Array）用方括号<code>[]</code>表示，存放值<br>对象（Object）用大括号<code>&#123;&#125;</code>表示，存放名称/值<br>名称/值对（name/value）组合成数组和对象<br>名称（name）置于双引号中，值（value）有字符串、数值、布尔值、null、对象、数组。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;John&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;age&quot;</span>:<span class="number">19</span>,</span><br><span class="line">    <span class="attr">&quot;hobby&quot;</span>:[<span class="string">&quot;Sing&quot;</span>,<span class="string">&quot;dance&quot;</span>,<span class="string">&quot;Rap&quot;</span>,<span class="string">&quot;basketball&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="字符串规则"><a href="#字符串规则" class="headerlink" title="字符串规则"></a>字符串规则</h2><p>用英语双引号括起来<br>字符串中不能单独出现双引号<code>&quot;</code>和反斜杠<code>\</code><br>如需输入双引号或反斜杠，需要在其前面加上一个\，如 <code>你喜欢苹果\\香蕉</code></p><h2 id="JSON的解析与生成"><a href="#JSON的解析与生成" class="headerlink" title="JSON的解析与生成"></a>JSON的解析与生成</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">JSON.parse()    将符合JSON规则的字符串转换为对象</span><br><span class="line">JSON.stringify()     将Javascript值转换为字符串</span><br><span class="line">eval()     将字符串解析为代码执行</span><br></pre></td></tr></table></figure><p><code>解析</code>是指将JSON字符串转化为Javascript对象的过程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">JSON.parse(name,value)</span><br><span class="line"></span><br><span class="line">第一个参数为变量名，是必选参数。</span><br><span class="line">第二个参数为需要执行的函数名，如果使用两个参数的话，对象中的每一组名称&#x2F;值对都会执行一次函数，用于解析过程中的赋值。</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;&#123;&quot;name&quot;:&quot;John&quot;,&quot;age&quot;:19&#125;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(str);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> obj = <span class="built_in">JSON</span>.parse(str,fun);</span><br><span class="line"><span class="comment">//var obj = eval(&quot;(&quot;+ str + &quot;)&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params">name,value</span>)</span>&#123;  </span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(obj);</span><br></pre></td></tr></table></figure><p><code>序列化</code>是指将Javascript值转化为JSON字符串的过程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">JSON.stringify(value,replacer,space)</span><br><span class="line"></span><br><span class="line">第一个参数为Jascript的值，一般是对象或数组，是必选参数。</span><br><span class="line">第二个参数可以是函数或者数组,如果是函数，对象中的每一组名称&#x2F;值对都会执行一次函数，函数返回值将代替转化结果进行输出，如果返回undefind，则被忽略。如果是数组，则只有数组中存在的名称，才能被转化，且转化后顺序与数组中的值保持一致</span><br><span class="line">第三个参数是为了方便阅读和排版，用来添加空白或制表符等</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    name:<span class="string">&quot;John&quot;</span>,</span><br><span class="line">    age:<span class="number">19</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(obj);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> jsonstr = <span class="built_in">JSON</span>.stringify(obj,fun);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params">name,value</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(jsonstr);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    a:<span class="number">1</span>,</span><br><span class="line">    b:<span class="number">2</span>,</span><br><span class="line">    c:<span class="number">3</span>,</span><br><span class="line">    d:<span class="number">4</span>   </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(obj);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> jsonstr = <span class="built_in">JSON</span>.stringify(obj,[<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>,<span class="string">&quot;a&quot;</span>],<span class="string">&quot;\t&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(jsonstr);</span><br></pre></td></tr></table></figure><h2 id="JSON和XML的转化"><a href="#JSON和XML的转化" class="headerlink" title="JSON和XML的转化"></a>JSON和XML的转化</h2><p>官网很慢，我们在下面这个网站下载jQuery文件</p><blockquote><p><a href="http://www.jq22.com/jquery-info122">http://www.jq22.com/jquery-info122</a></p></blockquote><p>在下面这个网站下载jquery.json2xml.js和jquery.xml2json.js两个组件</p><blockquote><p><a href="https://json.cn/component.html">https://json.cn/component.html</a></p></blockquote><p>先引入下载的三个js文件，然后就可以使用了，引入顺序很重要</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery.json2xml.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery.xml2json.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将XML字符串转化为JSON字符串的过程</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;&lt;root&gt;&quot;</span>+</span><br><span class="line">          <span class="string">&quot;&lt;name&gt;John&lt;/name&gt;&quot;</span>+</span><br><span class="line">          <span class="string">&quot;&lt;age&gt;19&lt;/age&gt;&quot;</span>+</span><br><span class="line">          <span class="string">&quot;&lt;hobby&gt;Sing&lt;/hobby&gt;&quot;</span>+</span><br><span class="line">          <span class="string">&quot;&lt;hobby&gt;dance&lt;/hobby&gt;&quot;</span>+</span><br><span class="line">          <span class="string">&quot;&lt;hobby&gt;Rap&lt;/hobby&gt;&quot;</span>+</span><br><span class="line">          <span class="string">&quot;&lt;hobby&gt;basketball&lt;/hobby&gt;&quot;</span>+</span><br><span class="line">          <span class="string">&quot;&lt;/root&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(str);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = $.xml2json(str);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(obj);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> jsonstr = <span class="built_in">JSON</span>.stringify(obj);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(jsonstr);</span><br></pre></td></tr></table></figure><p>将Javascript对象转换为XML字符串的过程</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    name:<span class="string">&quot;John&quot;</span>,</span><br><span class="line">    age:<span class="number">19</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(obj);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> xmlstr = $.json2xml(obj);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(xmlstr);</span><br></pre></td></tr></table></figure><h2 id="GeoJSON和TopoJSON"><a href="#GeoJSON和TopoJSON" class="headerlink" title="GeoJSON和TopoJSON"></a>GeoJSON和TopoJSON</h2><p>下面这个网站，可以在线在地图上表示GeoJSON信息</p><blockquote><p><a href="http://geojson.io/">http://geojson.io</a></p></blockquote><p>GeoJSON和TopoJSON是符合JSON语法规则的两种数据格式，用于表示地理信息</p><ul><li>GeoJSON<br>GeoJSON用于表示地理空间信息，它的最外层是一个对象，对象可表示几何体(Geometry)、特征(Feature)、特征集合(FeatureCollection)<br>最外层的GeoJSON里可能包含多个子对象，每一个GeoJSON对象都有一个type属性，表示对象类型，有下面这些类型<ul><li>Point 点</li><li>MultiPoint 多点</li><li>LineString 线</li><li>MultiLineString 多线</li><li>Polygon 面</li><li>MultiPolygon 多面</li><li>GeometryCollection 几何体集合</li><li>Feature 特征</li><li>FeatureCollection 特征集合</li></ul></li></ul><p>如果type值为Point、MultiPoint、LineString、MultiLineString、Polygon、MultiPolygon，对象必有变量coordinates<br>如果type值为GeometryCollection，对象必有变量geometries，其值是一个数组，数组每一项都是一个几何对象<br>如果type值为Feature，对象必有变量geometry，表示几何体其值为一个几何体对象。此特征对象还包含一个properties，表示特征，其值可以是任意JSON对象或者Null</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;type&quot;</span>:<span class="string">&quot;GeometryCollection&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;geometries&quot;</span>:[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;Point&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;coordinates&quot;</span>: [<span class="number">50</span>,<span class="number">30</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;LineString&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;coordinates&quot;</span>: [[<span class="number">50</span>,<span class="number">30</span>],[<span class="number">100</span>,<span class="number">30</span>]]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;type&quot;</span>:<span class="string">&quot;Feature&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;properties&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;四川成都&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;geometry&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>:<span class="string">&quot;Point&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;coordinates&quot;</span>:[<span class="number">104.05</span>,<span class="number">30.68</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>TopoJSON<br>TopoJSON是GeoJSON按拓扑学编码后的扩展形式<br>TopoJSON消除了冗余，相比TopoJSON文件较小</li></ul><p>下面这个网站可以进行TopoJSON和GeoJSON格式的转换</p><blockquote><p><a href="https://mapshaper.org/">https://mapshaper.org/</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;今天，我的JSON学习算是告一段落了，不过只是入门阶段，我只是掌握了一些基础语法，下面是我的学习笔记，有兴趣的小伙伴可以看一看，这不是一篇教</summary>
      
    
    
    
    <category term="编程学习" scheme="https://jcxiaozhan.gitee.io/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="JSON" scheme="https://jcxiaozhan.gitee.io/tags/JSON/"/>
    
    <category term="JavaScript" scheme="https://jcxiaozhan.gitee.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>聊聊PanDownload</title>
    <link href="https://jcxiaozhan.gitee.io/2020/04/17/%E8%81%8A%E8%81%8APanDownload/"/>
    <id>https://jcxiaozhan.gitee.io/2020/04/17/%E8%81%8A%E8%81%8APanDownload/</id>
    <published>2020-04-16T16:00:00.000Z</published>
    <updated>2021-08-29T16:24:37.073Z</updated>
    
    <content type="html"><![CDATA[<h3 id="这篇文章，就PanDownload开发者被抓事件，我想谈谈自己的看法"><a href="#这篇文章，就PanDownload开发者被抓事件，我想谈谈自己的看法" class="headerlink" title="这篇文章，就PanDownload开发者被抓事件，我想谈谈自己的看法"></a>这篇文章，就PanDownload开发者被抓事件，我想谈谈自己的看法</h3><p>事情是这样的，2020年4月15日下午，PanDownload开发者蔡某萌被抓，他开发的这款软件可以突破百度网盘限速从而高速下载网盘文件，软件完全免费，深受大家喜欢。今年2月，有人报案说PanDownload泄漏了自己的隐私，警方开始调查。蔡某萌被抓后，警方爆出他非法盈利30余万，给百度公司带来了上千万的损失。</p><p>事发之后，各大贴吧论坛反应还是挺大的，可见这个软件用户群数量的庞大，网上骂声一片，矛头直指百度，你可能会说，为什么盗版软件侵权，正版软件却背负骂名呢。这就要说说百度网盘恶心人的限速机制了，普通用户是完全没有体验可言的，从网盘下载文件，限速最低可以到几kb/s，就算是你交钱开通了所谓的超级会员，好像也不尽人意，据网友反映，好像还有个下载量限制，本人也有幸借过SVIP账号对比过两款软件的下载速度，下载同样的文件包，我的百度网盘客户端总下载速度4M/s，而PanDownload总下载速度跑到了7M/s，可见百度网盘对于SVIP也有限速机制。对于大部分用户而言，他们交钱开会员就是为了有一个好的体验(ps:博主从来没有开过会员，穷！)，很明显，百度让大家都失望了。</p><blockquote><p>领导，我求求你们别再追查PanDownload了，行吗？263块的超级会员svip，我充了三年，房子充没了。现在好不容易有了速度快的，你们非说它是假的。那软件假不假我们能不知道吗?那软件本来就不用花钱，你说制作者能赚钱吗？谁家能不下载呢，你就能保证你这一辈子不下载吗？你把他抓走了，我们都得2kb/s。我不想慢，我想快点。——《我不是盘神》</p></blockquote><p>上面这是B站网友们玩的一个梗，虽然是梗，但我觉得，盘神这个比喻很恰当，虽然一些人已经把这次事件上升到了阶级矛盾，说是资本主义的垄断和剥削。我不是很懂，我只能站在我所能理解的角度去看待这个问题，百度网盘现在确实属于一家独大的局面，因为好多网上流传的资源都是用的百度网盘，庞大的用户群体让它有了垄断的资本，所以，没办法，大家都得用，然后，百度就真的没把用户当人看了，十分恶心的限速机制，网友戏称“毒云”，我记得很久以前我用的时候，还是很好的，那个时候叫百度云，普通用户的下载速度也能够到500K/s左右，会员提速也是真实有效的，那个时候，百度云的评价还是很好的，大家也没抱怨过，会员机制也可以理解，毕竟要存放那么多人的资料，服务器是需要经费的。到后来，百度干的事情就越来越流氓了，以至于到如今，发生这件事，网友们一边倒地支持PanDwonload，替百度说话的没几个。</p><p>并不是推崇盗版，我们来简单分析下这件事，PanDownload从发布到现在应该也有一两年了，而且很早之前也出现过PanDownload加速无效的情况，估计是被百度网盘官方给制裁过。为什么当时不抓，现在来抓？刘某报案称自己隐私被泄露。你要不是个技术人员，你怎么知道自己隐私被泄露了？你是在某某网站上看到了自己的视频、照片、个人信息，还是什么，又怎么知道是通过PanDownload泄漏的？这个地方我真的很困惑，我觉得就是百度安排的，目的嘛，就是PanDownload确实影响到了百度的利益，然后加速下载的渠道，百度控制不了了，就找警察了。但是你说PanDownload造成了百度上千万的损失，我还真就不相信。软件上明确表示永久免费，严禁倒卖。非法盈利30万，这30万虽然是用户对软件的捐赠，这个从法律层面来说，确实违法了，但是从道德层面来讲，这是用户自愿的，是对软件的一种认可，而不像百度网盘，真就逼迫你消费，还不给你一个好的体验。</p><p>这次的事件，无非就是百度想要杀鸡儆猴，制裁这些损害自己利益的软件，目的达到了，拿了钱，失了人心，如果不从自身改变，等到哪天有一个替代品出现，百度网盘会凉得很快很彻底。</p><p><strong>以上只是我的个人观点，也不一定是正确的，这个事情每个人都有每个人自己的理解吧。虽然这个大佬这次触碰到法律了，但是技术无罪，我们也应该感谢他曾经用爱发电。</strong></p><img src="https://img.jcxiaozhan.top/PanDownload.jpg">]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;这篇文章，就PanDownload开发者被抓事件，我想谈谈自己的看法&quot;&gt;&lt;a href=&quot;#这篇文章，就PanDownload开发者被抓事件，我想谈谈自己的看法&quot; class=&quot;headerlink&quot; title=&quot;这篇文章，就PanDownload开发者被抓事件</summary>
      
    
    
    
    <category term="闲谈" scheme="https://jcxiaozhan.gitee.io/categories/%E9%97%B2%E8%B0%88/"/>
    
    
    <category term="百度云" scheme="https://jcxiaozhan.gitee.io/tags/%E7%99%BE%E5%BA%A6%E4%BA%91/"/>
    
    <category term="PanDownload" scheme="https://jcxiaozhan.gitee.io/tags/PanDownload/"/>
    
  </entry>
  
  <entry>
    <title>简约背景图</title>
    <link href="https://jcxiaozhan.gitee.io/2020/04/09/%E7%AE%80%E7%BA%A6%E8%83%8C%E6%99%AF%E5%9B%BE/"/>
    <id>https://jcxiaozhan.gitee.io/2020/04/09/%E7%AE%80%E7%BA%A6%E8%83%8C%E6%99%AF%E5%9B%BE/</id>
    <published>2020-04-08T16:00:00.000Z</published>
    <updated>2021-06-25T05:50:33.386Z</updated>
    
    <content type="html"><![CDATA[<div class="note danger flat"><p>由于推荐网站无法访问，本篇博客已失效！</p></div><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>今天给大家分享的是一个背景图网站，里面全都是一些简约风格的图片，平铺拉伸都好看，很适合拿来当做背景图，点击图片还可以在线预览效果，下载也简单，本网站的之前的背景图就是在里面找到，喜欢简约风格的小伙伴一定不要错过！<br>废话不多说，上链接，<a href="www.toptal.com/designers/subtlepatterns/">https://www.toptal.com/designers/subtlepatterns/</a></p><img src="https://img.jcxiaozhan.top/%E7%BD%91%E9%A1%B5%E8%83%8C%E6%99%AF%E5%9B%BE%E5%88%86%E4%BA%AB.jpg">]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note danger flat&quot;&gt;&lt;p&gt;由于推荐网站无法访问，本篇博客已失效！&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;今天给大家分</summary>
      
    
    
    
    <category term="网站建设" scheme="https://jcxiaozhan.gitee.io/categories/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    
  </entry>
  
  <entry>
    <title>百度云限速破解(PC)</title>
    <link href="https://jcxiaozhan.gitee.io/2020/03/28/%E7%99%BE%E5%BA%A6%E4%BA%91%E9%99%90%E9%80%9F%E7%A0%B4%E8%A7%A3(PC)/"/>
    <id>https://jcxiaozhan.gitee.io/2020/03/28/%E7%99%BE%E5%BA%A6%E4%BA%91%E9%99%90%E9%80%9F%E7%A0%B4%E8%A7%A3(PC)/</id>
    <published>2020-03-27T16:00:00.000Z</published>
    <updated>2021-08-29T18:31:00.815Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>百度云限速机制大家都了解，不开会员下载东西会限速几十k每秒，然而，作为多年白嫖党，开会员是不可能的，这辈子都不可能，下面就教大家我现在在使用的一种PC端破解百度云限速的方法，你甚至都不需要下载百度云客户端，就可以高速下载网盘资源</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li>一个浏览器，什么浏览器都可以，只要能安装扩展插件就行，当然，IE就算了，太过时了</li><li>谷歌访问助手，<a href="https://www.lanzoui.com/b0epia9uh">点击下载</a>，密码:5ane</li><li>油猴插件，这个插件强力推荐，功能太强大了，具体多强大，自己研究吧，<a href="https://wwa.lanzoui.com/b0epiaaoh">点击下载</a>,密码：9irj</li></ol><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装浏览器插件"><a href="#安装浏览器插件" class="headerlink" title="安装浏览器插件"></a>安装浏览器插件</h3><p>这里以Chrome浏览器为例，下载谷歌访问助手和油猴插件，在浏览器设置里，找到扩展程序页面，将油猴插件直接拖入浏览器即可完成安装，而谷歌访问助手则需要解压后点击如图位置选择解压文件夹进行安装</p><img src="https://img.jcxiaozhan.top/%E7%99%BE%E5%BA%A6%E4%BA%91%E4%B8%80.jpg"><h3 id="安装下载器"><a href="#安装下载器" class="headerlink" title="安装下载器"></a>安装下载器</h3><p>安装完谷歌访问助手后，就可以访问谷歌商店了，点击访问我们在谷歌商店搜索 Neat Download，找到如下图所示第一个插件，进行添加</p><img src="https://img.jcxiaozhan.top/%E7%99%BE%E5%BA%A6%E4%BA%91%E4%BA%8C.jpg"><h3 id="设置下载器"><a href="#设置下载器" class="headerlink" title="设置下载器"></a>设置下载器</h3><p>如下图，在设置中将下载最大线程改为32，保存并退出</p><img src="https://img.jcxiaozhan.top/%E7%99%BE%E5%BA%A6%E4%BA%91%E4%B8%89.jpg"><h3 id="下载脚本"><a href="#下载脚本" class="headerlink" title="下载脚本"></a>下载脚本</h3><p>现在我们到脚本网下一个百度云直链生成工具，<a href="https://greasyfork.org/zh-CN/">点击前往</a>，如图点击，即可在线安装</p><img src="https://img.jcxiaozhan.top/%E7%99%BE%E5%BA%A6%E4%BA%91%E5%9B%9B.jpg"><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol><li><p>如下图所示，在配置好的浏览器，登录网页版百度云，选中自己要下载的文件（不能直接下载文件夹），点击生成链接，在弹出的对话框中鼠标右箭点击链接，选择下载器下载即可</p><img src="https://img.jcxiaozhan.top/%E7%99%BE%E5%BA%A6%E4%BA%91%E4%BA%94.jpg"></li><li><p>我们来看看下载速度，2.8MB/s，已经很不错了，其实网速好的时候可以飙到6~7MB/s</p><img src="https://img.jcxiaozhan.top/%E7%99%BE%E5%BA%A6%E4%BA%91%E5%85%AD.jpg"></li><li><p>如果速度慢或是下载报错的情况，可以尝试更换应用ID，250528（官方）、265486、309847；266719、778750</p><img src="https://img.jcxiaozhan.top/%E7%99%BE%E5%BA%A6%E4%BA%91%E4%B8%83.jpg"></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;百度云限速机制大家都了解，不开会员下载东西会限速几十k每秒，然而，作为多年白嫖党，开会员是不可能的，这辈子都不可能，下面就教大家我现在在使用</summary>
      
    
    
    
    <category term="网络技术" scheme="https://jcxiaozhan.gitee.io/categories/%E7%BD%91%E7%BB%9C%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="百度云" scheme="https://jcxiaozhan.gitee.io/tags/%E7%99%BE%E5%BA%A6%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>GitHub仓库高速克隆</title>
    <link href="https://jcxiaozhan.gitee.io/2020/03/18/GitHub%E4%BB%93%E5%BA%93%E9%AB%98%E9%80%9F%E5%85%8B%E9%9A%86/"/>
    <id>https://jcxiaozhan.gitee.io/2020/03/18/GitHub%E4%BB%93%E5%BA%93%E9%AB%98%E9%80%9F%E5%85%8B%E9%9A%86/</id>
    <published>2020-03-17T16:00:00.000Z</published>
    <updated>2021-08-29T18:28:52.930Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>相信用过Github的小伙伴都知道，当我们用Git克隆GitHub仓库时，速度是非常慢的，我一个几mb大小的学习笔记克隆下来都要老半天，速度不超过10k/s，更不要说GitHub上面一些优秀的开源项目了,今天就教大家怎么高速克隆GitHub仓库。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>注册一个码云的账号，<a href="https://gitee.com/">点击前往</a></p><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><h3 id="在码云上面导入GitHub仓库"><a href="#在码云上面导入GitHub仓库" class="headerlink" title="在码云上面导入GitHub仓库"></a>在码云上面导入GitHub仓库</h3><p>登录码云，右上角加号，点击导入GitHub仓库<br>可以通过url导入，也可以关联GitHub账号来导入，我用的第一种</p><img src="https://img.jcxiaozhan.top/%E7%A0%81%E4%BA%91%E4%B8%80.jpg"><img src="https://img.jcxiaozhan.top/%E7%A0%81%E4%BA%91%E4%BA%8C.jpg"><h3 id="克隆仓库"><a href="#克隆仓库" class="headerlink" title="克隆仓库"></a>克隆仓库</h3><p>因为我们已经在码云上面导入了我们的GitHub仓库，所以我们可以用码云的仓库地址来进行克隆</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https地址&#x2F;ssh地址</span><br></pre></td></tr></table></figure><h3 id="修改仓库绑定"><a href="#修改仓库绑定" class="headerlink" title="修改仓库绑定"></a>修改仓库绑定</h3><p>在克隆下来的仓库本地文件夹里，我们找到<code>.git/config</code>这个文件<br>用文本编辑器打开，做如下修改，然后我们的本地库就又跟GitHub远程库绑定上了</p><img src="https://img.jcxiaozhan.top/%E7%A0%81%E4%BA%91%E4%B8%89.jpg"><img src="https://img.jcxiaozhan.top/%E7%A0%81%E4%BA%91%E5%9B%9B.jpg">]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;相信用过Github的小伙伴都知道，当我们用Git克隆GitHub仓库时，速度是非常慢的，我一个几mb大小的学习笔记克隆下来都要老半天，速度</summary>
      
    
    
    
    <category term="网络技术" scheme="https://jcxiaozhan.gitee.io/categories/%E7%BD%91%E7%BB%9C%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Git" scheme="https://jcxiaozhan.gitee.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>JS数组处理Demo</title>
    <link href="https://jcxiaozhan.gitee.io/2020/03/16/JS%E6%95%B0%E7%BB%84%E5%A4%84%E7%90%86Demo/"/>
    <id>https://jcxiaozhan.gitee.io/2020/03/16/JS%E6%95%B0%E7%BB%84%E5%A4%84%E7%90%86Demo/</id>
    <published>2020-03-15T16:00:00.000Z</published>
    <updated>2021-08-29T16:48:56.867Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>记录一次作业，说实话，这种写法，在我这种初学者看来，也感觉像个憨憨一样，但这正是我现在的真实水平，学习是一个循序渐进的过程，回头再看也会感慨吧，写出来了我就顺便记录下吧!</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">language</span>=<span class="string">&quot;javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.onload = init;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> btns = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;btn&quot;</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">btns[0].onclick = btnClick;</span><br><span class="line">btns[1].onclick = myFunction;</span><br><span class="line">btns[2].onclick = myFunction;</span><br><span class="line">btns[3].onclick = btnClick;</span><br><span class="line">btns[4].onclick = btnClick;</span><br><span class="line">btns[5].onclick = btnClick;</span><br><span class="line">btns[6].onclick = btnClick;</span><br><span class="line">btns[7].onclick = btnClick;</span><br><span class="line">btns[8].onclick = btnClick;</span><br><span class="line">btns[9].onclick = btnClick;</span><br><span class="line">btns[10].onclick = btnClick;</span><br><span class="line">btns[11].onclick = btnClick;</span><br><span class="line">btns[12].onclick = myFunction;</span><br><span class="line">btns[13].onclick = btnClick;</span><br><span class="line">btns[14].onclick = btnClick;</span><br><span class="line">btns[15].onclick = btnClick;</span><br><span class="line">btns[16].onclick = btnClick;</span><br><span class="line">btns[17].onclick = btnClick;</span><br><span class="line">btns[18].onclick = btnClick;</span><br><span class="line">            </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">btnClick</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> hege = [<span class="number">-31</span>,<span class="number">32</span>];</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> stale = [<span class="number">33</span>, <span class="number">34</span>, <span class="number">35</span>];</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> spanInfo=<span class="built_in">document</span>.getElementById(<span class="string">&quot;demo&quot;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> obj = event.srcElement ? event.srcElement : event.target;</span></span><br><span class="line">        if(obj == btns[0])&#123;</span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> children = hege.concat(stale);</span></span><br><span class="line">    spanInfo.innerHTML=children;</span><br><span class="line"></span><br><span class="line"><span class="javascript">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(obj == btns[<span class="number">3</span>])&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> number = stale.indexOf(<span class="number">34</span>);</span></span><br><span class="line">            spanInfo.innerHTML=number;</span><br><span class="line"><span class="javascript">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(obj ==btns[<span class="number">4</span>])&#123;</span></span><br><span class="line">            spanInfo.innerHTML=stale.join();</span><br><span class="line"><span class="javascript">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(obj ==btns[<span class="number">5</span>])&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> number = stale.lastIndexOf(<span class="number">34</span>);</span></span><br><span class="line">            spanInfo.innerHTML=number;</span><br><span class="line"><span class="javascript">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(obj ==btns[<span class="number">6</span>])&#123;</span></span><br><span class="line"><span class="javascript">            spanInfo.innerHTML= hege.map(<span class="built_in">Math</span>.abs);</span></span><br><span class="line"><span class="javascript">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(obj ==btns[<span class="number">7</span>])&#123;</span></span><br><span class="line">            stale.pop();</span><br><span class="line">            spanInfo.innerHTML=stale;</span><br><span class="line"><span class="javascript">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(obj ==btns[<span class="number">8</span>])&#123;</span></span><br><span class="line">            hege.push(36);</span><br><span class="line">            spanInfo.innerHTML=hege;</span><br><span class="line"><span class="javascript">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(obj ==btns[<span class="number">9</span>])&#123;</span></span><br><span class="line">            stale.reverse();</span><br><span class="line">            spanInfo.innerHTML=stale;</span><br><span class="line"><span class="javascript">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(obj ==btns[<span class="number">10</span>])&#123;</span></span><br><span class="line">            stale.shift();</span><br><span class="line">            spanInfo.innerHTML=stale;</span><br><span class="line"><span class="javascript">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(obj ==btns[<span class="number">11</span>])&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> newnumber = stale.slice(<span class="number">0</span>,<span class="number">2</span>);</span></span><br><span class="line">            spanInfo.innerHTML=newnumber;</span><br><span class="line"><span class="javascript">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(obj ==btns[<span class="number">13</span>])&#123;</span></span><br><span class="line">            hege.sort();</span><br><span class="line">            spanInfo.innerHTML=hege;</span><br><span class="line"><span class="javascript">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(obj ==btns[<span class="number">14</span>])&#123;</span></span><br><span class="line">            hege.splice(1,0,37,38);</span><br><span class="line">            spanInfo.innerHTML=hege;</span><br><span class="line"><span class="javascript">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(obj ==btns[<span class="number">15</span>])&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> str = hege.toString();</span></span><br><span class="line">            spanInfo.innerHTML=str;</span><br><span class="line"><span class="javascript">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(obj ==btns[<span class="number">16</span>])&#123;</span></span><br><span class="line">            hege.unshift(100);</span><br><span class="line">            spanInfo.innerHTML=hege;</span><br><span class="line"><span class="javascript">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(obj ==btns[<span class="number">17</span>])&#123;</span></span><br><span class="line">            spanInfo.innerHTML=stale.valueOf();</span><br><span class="line"><span class="javascript">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line">            spanInfo.innerHTML= hege.length;</span><br><span class="line">        &#125;    </span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="keyword">var</span> stale = [<span class="number">33</span>, <span class="number">34</span>, <span class="number">35</span>];</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">checkAdult</span>(<span class="params">stale</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> stale &gt;= <span class="number">18</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> obj = event.srcElement ? event.srcElement : event.target;</span></span><br><span class="line">    if(obj == btns[1])&#123;</span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;demo&quot;</span>).innerHTML = stale.every(checkAdult);</span></span><br><span class="line"><span class="javascript">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(obj == btns[<span class="number">2</span>])&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;demo&quot;</span>).innerHTML = stale.filter(checkAdult);</span></span><br><span class="line"><span class="javascript">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(obj == btns[<span class="number">12</span>])&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;demo&quot;</span>).innerHTML = stale.some(checkAdult);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>hege = [-31, 32]<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>stale = [33, 34, 35]<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>点我合并数组<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>点我检测stale中的数是否都大于18<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>点我获取stale中大于18的数<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>点我查看34在stale中的位置<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>点我输出stale字符串<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>点我查看34在stale中最后一次出现的位置<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>点我返回hege的绝对值<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>点我删除stale最后一个数<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>点我向hege加入数字36<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>点我反转stale<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>点我删除stale第一个数<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>点我输出stale前两个数<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>点我检测stale中是否有大于18的数<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>点我升序排列hege<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>点我在hege中加入37,38<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>点我输出hege字符串<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>点我向hege加入数字100<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>点我返回stale原始值<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>点我获取hege的长度<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;记录一次作业，说实话，这种写法，在我这种初学者看来，也感觉像个憨憨一样，但这正是我现在的真实水平，学习是一个循序渐进的过程，回头再看也会感慨</summary>
      
    
    
    
    <category term="编程学习" scheme="https://jcxiaozhan.gitee.io/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="JavaScript" scheme="https://jcxiaozhan.gitee.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>楚留香回忆录——别了江湖</title>
    <link href="https://jcxiaozhan.gitee.io/2020/03/13/%E6%A5%9A%E7%95%99%E9%A6%99%E5%9B%9E%E5%BF%86%E5%BD%95%E2%80%94%E2%80%94%E5%88%AB%E4%BA%86%E6%B1%9F%E6%B9%96/"/>
    <id>https://jcxiaozhan.gitee.io/2020/03/13/%E6%A5%9A%E7%95%99%E9%A6%99%E5%9B%9E%E5%BF%86%E5%BD%95%E2%80%94%E2%80%94%E5%88%AB%E4%BA%86%E6%B1%9F%E6%B9%96/</id>
    <published>2020-03-12T16:00:00.000Z</published>
    <updated>2020-12-31T12:35:30.128Z</updated>
    
    <content type="html"><![CDATA[<iframe frameborder="0" marginwidth="0" marginheight="0" width=600 height=86 src="https://music.163.com/outchain/player?type=2&id=531040898&auto=1&height=66"></iframe><h2 style="text-align:center">就从这首马步谣开始吧，初入江湖时是它，告别江湖也应该是它</h2><p>去年高考完，6月底，我接触了《楚留香》这款手游，开始了我的江湖之旅，其实吧，刚开始我还真没打算玩这款游戏的，无聊刷B站，刷到了那些神仙up的楚留香捏脸视频，正巧那段时间刚追完《少年歌行》，我寻思着，这游戏捏脸系统这么好，我整个无心和尚来玩玩吧。嗯，然后我就找了5张图，照着捏脸，反反复复捏了一上午，捏毁了又重来，捏毁了又重来，终于，大功告成，取个名字吧，且看梧桐落，当时不知道，这个名字出现在我脑海里，很有意境的感觉，就它了，我的江湖之旅，从这里开始了。</p><img src="https://img.jcxiaozhan.top/%E6%A5%9A%E7%95%99%E9%A6%99%EF%BC%881%EF%BC%89.jpg" width="75%"><p style="text-align:center">全服最帅和尚，没有之一</p><p>跟随系统引导，做新手任务，刚开始序章的时候，一连串的剧情，每一段都有配音，好像我还听到了阿杰的声音，听着是真的爽，仿佛一下子就被带入其中了，我一字一句地看着剧情，心中感叹着，这游戏，是真良心啊，精美的画面，神仙般的配音。但是，没出半小时，我失望了，突然，后面的剧情不给配音了，看着文字没感觉啊，匆匆点击跳过，嘿嘿，拿经验，升级，作为一个萌新，暂时还看不懂楚留香那些花里胡哨的东西，刷任务，拿经验升级，加点，最开始的一个星期，我就是这么玩的，还加了有一个帮派，世界频道上随便点进去的，叫古道音尘，一个很古风的名字，里面的几个管理都是当时区榜大佬，很明显是转区玩的一些老玩家，每天我上线都会看见他们在线，感觉他们就是不需要睡眠一样，我也很好奇为什么他们总有事做，而我只是做着每天的日常，跑跑主线，经验上限了，我就不玩了。</p><p>因为这个假期很长，很无聊，我既没有出去旅游，也没有出去打工，每天大半时间宅在家里。我开始在B站，在贴吧找教程，开始研究这个游戏怎么玩，发现这游戏啊基本上就是，升修，打架，而要想升修，就要肝，基本上游戏涉及到的方方面面都要花费大量的时间，以前玩《明日之后》的经验告诉我，肝帝在后期是绝对打不赢氪金大佬的，同为网易游戏，我相信，这一点两者是相同的，那应该怎么玩呢，正好游戏刚出宅邸系统，可以拥有一个家园，我马上有了想法，那就做个生活大佬吧，努力赚钱，买房子，以后实在玩不动了，还可以搞搞装修，安心养老。</p><p>后来有一天早上上线，发现帮主换人了，那群大佬也只剩一个在帮里了，据说是几个大佬闹掰了，在一个一个看他们的资料，全都去了当时区榜前几的不同的帮，总之，对我是没啥影响，我依旧是挖矿、砍竹子攒钱，帮里一个云梦给我发消息：“和尚，要做我徒弟吗”，我说行啊，她就是我第一个师傅，墨惜，没跟她拍过照片，她也不关心我这个当徒弟的，拜了师，从来不带我做任务，每天传功，还得我找她，连个工具人都当不好，这师傅，不要也罢，不到一个月，她A了，我也没急着再找师傅。每天，砍竹子、挖矿、带一条，接悬赏，在熟悉游戏流程后，我每天也很长时间在线，总有做不完的任务，走上了肝的道路。</p><p>后来一次结缘任务，我认识了文文，也就是我后来的情缘，她是个萌新，修为不高，看得出来对游戏不熟悉，我仿佛看到了我刚玩这游戏时的样子，我开始帮她解答问题，什么东西有什么用之类的，每天带她跑一条，没事就带她去挖矿，毕竟对于我们这些零氪党来说，银子是很重要的。说来也有趣，有钱的大佬带着情缘坐花车到处飞，我带着情缘挖矿体验生活，哈哈。我很珍惜和文文在一起玩的时光，因为初入江湖，没几个好友，她能跟我说上几句，也算是一种无聊游戏里的陪伴吧。虽然，我也经常在帮里活跃气氛，没话找话地跟帮里人交谈取乐，但是帮里高管走后，好多人也离开了，剩下的多是平时不说话的萌新，一场帮战两三个人参加，进去就挂机的那种。十几天后，当最后一个能在帮里和我说两句的老玩家走后，我意识到，这帮凉透了。</p><img src="https://img.jcxiaozhan.top/%E6%A5%9A%E7%95%99%E9%A6%99%EF%BC%882%EF%BC%89.jpg" width="75%"><p style="text-align:center">带文文划船</p><img src="https://img.jcxiaozhan.top/%E6%A5%9A%E7%95%99%E9%A6%99%EF%BC%883%EF%BC%89.jpg" width="75%"><p style="text-align:center">我布置的明灯三千（三十）</p><p>我找到了当时排行靠前的大帮，客栈，当时没想过后来能认识那么多的朋友，甚至当上副帮主，只觉得这个帮名，特别nice，私聊帮主子夜，他表示客栈很活跃，欢迎我的加入。新人入帮，我马上看到一群云梦叫我眼熟她们，行吧，这帮是真活跃，跟帮里人开开玩笑，皮两下，我马上就把文文叫过来了。还记得当时我6000多修，帮里有几个9000多修的大佬，经常带图，我也跟着蹭，但我很少说话，完全一种仰望大佬的姿态，到后来吧，发现，大家都很好相处，聊得也多了，大家一起熬夜打本，一起互道晚安，组队跳崖、组队乞讨、组队串门…</p><img src="https://img.jcxiaozhan.top/%E6%A5%9A%E7%95%99%E9%A6%99%EF%BC%885%EF%BC%89.jpg" width="75%"><p style="text-align:center">帮里很早时候的那批人了</p><p>听说师徒任务奖励还挺多，我开始收徒，汤池、酒馆转一转，一星期时间，收了4个乖徒儿，之后我每天就多了一件事，带她们做师徒任务，阿光跟我玩得最多，她喜欢逛地图，发现什么好玩的，就会找我，她找到的那个烂木头点，还让我小赚了一笔，用烂木头做铲子，当时垄断整个区的一阶铲市场整整一星期。本想着带着4个徒儿去塞北的长城拍一张大合照的，时间总没凑上，这也是我的一个遗憾吧。</p><img src="https://img.jcxiaozhan.top/%E6%A5%9A%E7%95%99%E9%A6%99%EF%BC%884%EF%BC%89.jpg" width="75%"><p style="text-align:center">四个乖徒儿</p><p>有一天无聊，在汤池练琵琶，悦耳的旋律吸引了一个小迷妹，亓琪，我的第二个师傅，我当时就随口问了一句，“收我当徒弟吗”，她说行，就这样，我又捡了个师傅，虽然她修为始终没超过我，但是还算是个尽职尽责的师傅了，在我教会她跑师徒后，每天，她都会带我，师傅挺富的，每次活动都会去抽衣服，哎，羡慕啊！我估计她应该充了几百了吧，可她锤不过我，整些衣服，花里胡哨的，哈哈。</p><img src="https://img.jcxiaozhan.top/%E6%A5%9A%E7%95%99%E9%A6%99%EF%BC%886%EF%BC%89.jpg" width="75%"><p style="text-align:center">给师傅当模特</p><img src="https://img.jcxiaozhan.top/%E6%A5%9A%E7%95%99%E9%A6%99%EF%BC%887%EF%BC%89.jpg" width="75%"><p style="text-align:center">退游前最后一次舞剑</p><p>好友里有一个叫玥川的云梦，名副其实的肝帝，虽然她自己不承认，我们是挖矿是认识的，当时一起压过全区的黄铜价。她跟我一样，是个零氪党，但是始终比我高2000左右的修为，不管我怎么肝，都追不上，到后来我养老生活那段时间，她更是直接超了我4000修为，可能对于游戏的理解，她更加透彻些吧，我甘拜下风。</p><img src="https://img.jcxiaozhan.top/%E6%A5%9A%E7%95%99%E9%A6%99%EF%BC%888%EF%BC%89.jpg" width="75%"><p style="text-align:center">退游前，邀请肝帝来家里谈谈人生</p><p>八月底，开学季，帮里好多人都退游了，子夜、老钱、扶浪、老陌…文文也突然消失了，我也没去qq上问过她，后来知道是她号掉了，又创了个新号，取了一样名字。我依旧玩着，因为时间安排得过来，每天都会把日常做了，和帮里人聊聊天，我正式开启养老生活，那段时间，狗灯成了帮主，我成了副帮主，我、狗七、狗千、老女人、狗灯、文文、风风、童汐，我们几个撑过了帮派最艰难的时候，每周坚持跑百万，辛苦了童汐，不过大家也很欢乐，开着语音，聊天，撑过百万无聊的时间，童汐唱的小跳蛙是真滴有感觉，狗安然是真的狗，都退帮了，一听有小姐姐唱歌，又跑回来听，听完又溜了。狗七、狗灯，两个我大四川的兄弟，遇见还真是挺巧的，客栈还有很多的故事，是写不完的，多年以后再回忆起，会很怀念吧！</p><p>今年2月，我正式退游，心情还算平静，毕竟这重复的游戏模式确实枯燥，玩到最后，不舍的也就是江湖的那帮朋友，我曾说我会等到我好友列表最后一个头像变黑，我再退游，但是，我撑不下去了，现实生活还有很多有意义的事情等着我去做，江湖这一程，虽然很短，遇见了那么多人，我心满意足，感谢陪伴。</p><p>听人说，后来我们都成了江湖传闻，茶馆酒肆说尽一生，愿各位的灰色头像下，都是精彩的人生！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;iframe frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=600 height=86 src=&quot;https://music.163.com/outchain/player?type=2&amp;id=531040898&amp;</summary>
      
    
    
    
    <category term="闲谈" scheme="https://jcxiaozhan.gitee.io/categories/%E9%97%B2%E8%B0%88/"/>
    
    
    <category term="楚留香" scheme="https://jcxiaozhan.gitee.io/tags/%E6%A5%9A%E7%95%99%E9%A6%99/"/>
    
  </entry>
  
  <entry>
    <title>GitHub项目托管</title>
    <link href="https://jcxiaozhan.gitee.io/2020/03/09/GitHub%E9%A1%B9%E7%9B%AE%E6%89%98%E7%AE%A1/"/>
    <id>https://jcxiaozhan.gitee.io/2020/03/09/GitHub%E9%A1%B9%E7%9B%AE%E6%89%98%E7%AE%A1/</id>
    <published>2020-03-08T16:00:00.000Z</published>
    <updated>2021-08-30T02:36:59.984Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本篇文章是一篇新手教程，只讲解GitHub基本的工作流程，不会讲解工作过程中出现的问题，例如多人协作冲突等问题请自行百度</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>要想管理GitHub，当然要借助Git这个工具，你可以<a href="https://git-scm.com/">点击这里</a>，进行下载。</p><h2 id="Git四大区"><a href="#Git四大区" class="headerlink" title="Git四大区"></a>Git四大区</h2><p>如下图所示，Git的工作涉及到四个区域，分别是工作区、暂存区、本地仓库、远程仓库 ，熟悉这四个区域，就能轻松地完成Git的操作</p><img src="https://img.jcxiaozhan.top/%E4%BB%93%E5%BA%93%E4%B8%80.png"><p>工作区：我们修改文件的本地文件夹</p><p>暂存区：也叫索引区，用于临时存放修改后的文件</p><p>本地仓库：修改后的文件，要先传到本地仓库，再同步到远程仓库</p><p>远程仓库：也就是GitHub仓库</p><h2 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h2><div class="note warning flat"><p>除第一步克隆外，其余步骤命令皆在工作区内右键打开git命令行输入</p></div><h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><p>首先在GitHub创建一个新仓库，将它克隆到本地(使用下面的命令)<br>如果用ssh地址进行克隆需要先完成配置，可以参看我的上篇文章<a href="https://jcxiaozhan.gitee.io/2020/03/07/GitHub-%E9%85%8D%E7%BD%AESSH/">《GitHub-配置SSH》</a><br>克隆下来的文件夹就是我们的<code>工作区</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https地址&#x2F;ssh地址</span><br></pre></td></tr></table></figure><h3 id="配置本地信息"><a href="#配置本地信息" class="headerlink" title="配置本地信息"></a>配置本地信息</h3><p>通过以下命令，查询本地配置信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config -l</span><br></pre></td></tr></table></figure><img src="https://img.jcxiaozhan.top/%E4%BB%93%E5%BA%93%E4%BA%8C.png"><p>图中红方框区域是我们本地的用户名和邮箱信息，如果没有，需要依次使用以下两条命令来进行添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;用户名&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;邮箱&quot;</span><br></pre></td></tr></table></figure><h3 id="提交到暂存区"><a href="#提交到暂存区" class="headerlink" title="提交到暂存区"></a>提交到暂存区</h3><p>对<code>工作区</code>内的文件进行修改后，使用以下命令将文件提交到<code>暂存区</code><br>提交单个修改文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add 文件名.文件后缀</span><br></pre></td></tr></table></figure><p>提交所有修改文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><p>如果提交过后发现错误，可通过以下命令从<code>暂存区</code>拿出已提交的文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD 文件名.文件后缀</span><br></pre></td></tr></table></figure><p>下面是一条查询命令，可以让我们清楚<code>暂存区</code>当前状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><img src="https://img.jcxiaozhan.top/%E4%BB%93%E5%BA%93%E4%B8%89.png"><p style="text-align:center">红色代表工作区文件发生更改，但还没提交到暂存区</p><img src="https://img.jcxiaozhan.top/%E4%BB%93%E5%BA%93%E5%9B%9B.png"><p style="text-align:center">绿色代表更改文件已提交到暂存区</p><h3 id="提交到本地仓库"><a href="#提交到本地仓库" class="headerlink" title="提交到本地仓库"></a>提交到本地仓库</h3><p>通过以下命令，将<code>暂存区</code>文件提交到<code>本地仓库</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;对此次修改的简要描述&quot;</span><br></pre></td></tr></table></figure><h3 id="提交到远程仓库"><a href="#提交到远程仓库" class="headerlink" title="提交到远程仓库"></a>提交到远程仓库</h3><p>当所有修改文件都提交到<code>本地仓库</code>后，我们用以下命令，将<code>本地仓库</code>提交到<code>远程仓库</code>，然后就能在GitHub仓库看见我们的文件了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push</span><br></pre></td></tr></table></figure><p>下面这条命令，是用来查看我们的提交记录的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本篇文章是一篇新手教程，只讲解GitHub基本的工作流程，不会讲解工作过程中出现的问题，例如多人协作冲突等问题请自行百度&lt;/p&gt;
&lt;h2 i</summary>
      
    
    
    
    <category term="网络技术" scheme="https://jcxiaozhan.gitee.io/categories/%E7%BD%91%E7%BB%9C%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Git" scheme="https://jcxiaozhan.gitee.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>GitHub配置SSH</title>
    <link href="https://jcxiaozhan.gitee.io/2020/03/07/GitHub-%E9%85%8D%E7%BD%AESSH/"/>
    <id>https://jcxiaozhan.gitee.io/2020/03/07/GitHub-%E9%85%8D%E7%BD%AESSH/</id>
    <published>2020-03-06T16:00:00.000Z</published>
    <updated>2021-08-29T18:23:24.643Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SSH和HTTPS克隆仓库的区别"><a href="#SSH和HTTPS克隆仓库的区别" class="headerlink" title="SSH和HTTPS克隆仓库的区别"></a>SSH和HTTPS克隆仓库的区别</h2><ol><li>配置好使用ssh克隆或者更新个人仓库时，不用验证用户名和密码</li><li>HTTPS每次操作是需要验证的，但是由于它不用配置，对于新手是非常友好的，直接复制url到git命令行就可完成克隆</li></ol><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li>GitHub账号，如果没有，可以参照我的文章<a href="https://jcxiaozhan.gitee.io/2020/03/06/GitHub%E6%B3%A8%E5%86%8C-%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E7%A8%8B/">《GitHub注册》</a>，进行注册</li><li>下载安装Git，<a href="https://git-scm.com/">点击下载</a></li></ol><h2 id="配置流程"><a href="#配置流程" class="headerlink" title="配置流程"></a>配置流程</h2><h3 id="新建密钥"><a href="#新建密钥" class="headerlink" title="新建密钥"></a>新建密钥</h3><p>在电脑上新建一个文件夹，作为本地工作目录<br>在文件夹内右键打开git命令行，输入以下命令，回车再回车，创建密钥</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C &quot;small_邮箱&quot;</span><br></pre></td></tr></table></figure><img src="https://img.jcxiaozhan.top/SSH%E4%B8%80.png#pic_center"><h3 id="获取密钥"><a href="#获取密钥" class="headerlink" title="获取密钥"></a>获取密钥</h3><p>这里提供两个方法<br>法一：通过git命令行获取，通过以下命令，将密钥拷贝到剪切板</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clip &lt; ~&#x2F;.ssh&#x2F;id_rsa.pub</span><br></pre></td></tr></table></figure><p>法二：密钥保存在计算机内的路径为<code>C:\Users\Admininistrator\.ssh\id_rsa.pub</code>，通过文本编辑器打开 id_rsa.pub 复制即可</p><h3 id="添加密钥"><a href="#添加密钥" class="headerlink" title="添加密钥"></a>添加密钥</h3><p>登录GitHub，点击右上角头像，在展开项点击Settings，来到设置页，添加密钥</p><img src="https://img.jcxiaozhan.top/SSH%E4%BA%8C.png#pic_center" width="70%"><p>然后我们去仓库克隆一次项目，用命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone ssh地址</span><br></pre></td></tr></table></figure><img src="https://img.jcxiaozhan.top/SSH%E4%B8%89.png#pic_center"><p>第一次克隆项目，会询问是否永久添加密钥，我们选yes，之后再克隆项目，就不会询问了</p><img src="https://img.jcxiaozhan.top/SSH%E5%9B%9B.png#pic_center"><h3 id="查看配置结果"><a href="#查看配置结果" class="headerlink" title="查看配置结果"></a>查看配置结果</h3><p>回到GitHub设置页查看，出现下图，SSH配置成功</p><img src="https://img.jcxiaozhan.top/SSH%E4%BA%94.png#pic_center">]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;SSH和HTTPS克隆仓库的区别&quot;&gt;&lt;a href=&quot;#SSH和HTTPS克隆仓库的区别&quot; class=&quot;headerlink&quot; title=&quot;SSH和HTTPS克隆仓库的区别&quot;&gt;&lt;/a&gt;SSH和HTTPS克隆仓库的区别&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;配置好使用ssh</summary>
      
    
    
    
    <category term="网络技术" scheme="https://jcxiaozhan.gitee.io/categories/%E7%BD%91%E7%BB%9C%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Git" scheme="https://jcxiaozhan.gitee.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>GitHub注册-手把手教程</title>
    <link href="https://jcxiaozhan.gitee.io/2020/03/06/GitHub%E6%B3%A8%E5%86%8C-%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E7%A8%8B/"/>
    <id>https://jcxiaozhan.gitee.io/2020/03/06/GitHub%E6%B3%A8%E5%86%8C-%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E7%A8%8B/</id>
    <published>2020-03-05T16:00:00.000Z</published>
    <updated>2021-08-29T18:32:24.570Z</updated>
    
    <content type="html"><![CDATA[<h2 id="GitHub是什么"><a href="#GitHub是什么" class="headerlink" title="GitHub是什么"></a>GitHub是什么</h2><p>GitHub是一个开源项目托管平台，采用分布式版本控制系统，适用于多人研发项目，如果想要了解更多，可自行百度。</p><hr><h2 id="注册流程"><a href="#注册流程" class="headerlink" title="注册流程"></a>注册流程</h2><ol><li><p>登录<a href="http://github.com/">GitHub</a>官网,点击右上角注册</p><img src="https://img.jcxiaozhan.top/%E6%B3%A8%E5%86%8C%E4%B8%80.png" width="85%" height="30%"></li><li><p>在注册页按照下图所示填写信息，然后点击蓝色按钮</p><img src="https://img.jcxiaozhan.top/%E6%B3%A8%E5%86%8C%E4%BA%8C.png" width="60%" height="100%"></li><li><p>选择仓库类型，自己用肯定是选免费的啦</p><img src="https://img.jcxiaozhan.top/%E6%B3%A8%E5%86%8C%E4%B8%89.png" width="45%" height="100%"></li><li><p>然后是一个调查页，不用管，直接划到最底端，点击跳过</p><img src="https://img.jcxiaozhan.top/%E6%B3%A8%E5%86%8C%E4%BA%94.png" width="65%" height="100%"></li><li><p>登录自己的邮箱，通过邮件验证，完成注册</p><img src="https://img.jcxiaozhan.top/%E6%B3%A8%E5%86%8C%E5%85%AD.png" width="90%" height="30%"></li></ol><img src="https://img.jcxiaozhan.top/%E6%B3%A8%E5%86%8C%E4%B8%83.png" width="80%" height="20%">]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;GitHub是什么&quot;&gt;&lt;a href=&quot;#GitHub是什么&quot; class=&quot;headerlink&quot; title=&quot;GitHub是什么&quot;&gt;&lt;/a&gt;GitHub是什么&lt;/h2&gt;&lt;p&gt;GitHub是一个开源项目托管平台，采用分布式版本控制系统，适用于多人研发项目，如果</summary>
      
    
    
    
    <category term="网络技术" scheme="https://jcxiaozhan.gitee.io/categories/%E7%BD%91%E7%BB%9C%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Git" scheme="https://jcxiaozhan.gitee.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>我在人间凑数的日子</title>
    <link href="https://jcxiaozhan.gitee.io/2020/03/06/%E6%88%91%E5%9C%A8%E4%BA%BA%E9%97%B4%E5%87%91%E6%95%B0%E7%9A%84%E6%97%A5%E5%AD%90/"/>
    <id>https://jcxiaozhan.gitee.io/2020/03/06/%E6%88%91%E5%9C%A8%E4%BA%BA%E9%97%B4%E5%87%91%E6%95%B0%E7%9A%84%E6%97%A5%E5%AD%90/</id>
    <published>2020-03-05T16:00:00.000Z</published>
    <updated>2020-12-31T12:36:09.816Z</updated>
    
    <content type="html"><![CDATA[<h2 id="我在人间凑数的日子"><a href="#我在人间凑数的日子" class="headerlink" title="我在人间凑数的日子"></a>我在人间凑数的日子</h2><h2 style="text-align:right">——收录自广大皮友</h2><img src="https://img.jcxiaozhan.top/%E6%88%91%E5%9C%A8%E4%BA%BA%E9%97%B4%E5%87%91%E6%95%B0%E7%9A%84%E6%97%A5%E5%AD%90%E8%83%8C%E6%99%AF.jpg"><p>“浑浑噩噩每一天，却始终不想努力，总觉得不死总会出头”——选自散文集《我在人间凑数的日子》</p><p>穷则独善其身，不过生活姑娘我真的喜欢过你！——选自散文集《我在人间凑数的日子》</p><p>鱼与熊掌不可兼得，得到了财富，失去了烦恼。——选自散文集《我在人间凑数的日子》</p><p>人一生会碰到很多心动的人，可能会误以为那是喜欢，其实只不过是某一刻的好感，毕竟心动都不是答案，心定才是答案——选自散文集《我在人间凑数的日子》</p><p>我每天都在笑，你猜我快不快乐。——选自散文集《我在人间凑数的日子》</p><p>别低头，想想自己曾经也被父亲高高的举过头顶。——选自散文集《我在人间凑数的日子》</p><p>以前挺好的 想得少 睡得早 喜欢笑 不知怎的就突然活的潦草了。——选自散文集《我在人间凑数的日子》</p><p>五毛和五毛是最幸福的，因为他们凑成了一块。我觉得一辈子爱一个人就够了，而那个人刚好是你。——选自散文集《我在人间凑数的日子》</p><p>人在死亡面前，个个都是胆小鬼。人在钱财面前，个个都是贪财鬼！——选自散文集《我在人间凑数的日子》</p><p>曾经有个女孩说喜欢我，要跟我在一起，我拒绝了。因为我没钱，没车，没房。她不懂事，我得懂。——选自散文集《我在人间凑数的日子》</p><p>在三十岁某天，等红绿灯的瞬间，你会不会理解17岁时她所说的话。——来自散文集《我人间凑数的日子》</p><p>总觉得是，人无横财不富，马无夜草不肥。可谁又知道，横财不富穷人命，夜草不肥劳命马。——选自散文集《我在人间凑数的日子》</p><p>活成了自己最讨厌的样子，过着自己最不想要的日子。——选自散文集《我在人间凑数的日子》</p><p>我存于世，却与世格格不入 。——选自散文集《我在人间凑数的日子》</p><p>我孤独的活着，正如我孤独的来到这个世界。——选自散文集《我在人间凑数的日子》</p><p>这江湖也没什么，也就酒还不错，我会学着喝点儿。——选自散文集《我在人间凑数的日子》</p><p>把理想卖了还是买不起柴米油盐。——选自散文集《我在人间凑数的日子》</p><p>青涩不及当初，聚散不由你我，红颜已是过往，恩怨皆是云烟。——选自散文集《我在人间凑数的日子》</p><p>我不知道我将要去何方，但我已经在路上。——选自散文集《我在人间凑数的日子》</p><p>偶尔羡慕情侣，一直庆幸自由。——选自散文集《我在人间凑数的日子》</p><p>我不怪你放弃黑暗，我恨你弃暗投明没有带上我。——选自散文集《我在人间凑数的日子》</p><p>一个人！说好听点吧！是自由、说难听点、孤独得像条狗。——选自散文集《我在人间凑数的日子》</p><p>生人开不了口 ， 熟人下不了手，这可就是我单身的原因吧！——选自散文集《我在人间凑数的日子》</p><p>这不是你梦寐以求的长大吗，现在的你怎么愁眉苦脸。——选自散文集《我在人间凑数的日子》</p><p>我总不能用我的一生，换你的一句有可能吧。——选自散文集《我在人间凑数的日子》</p><p>“总会有人不珍惜 敢跟回忆较高低”——选自散文集《我在人间凑数的日子》</p><p>她到底有多好，值得你翻那么多句子就为找一条给她看。——选自散文集《我在人间凑数的日子》</p><p>远赴人间惊鸿宴 一睹人间盛世颜。——选自散文集《我在人间凑数的日子》</p><p>可惜我啊，相貌平平，一事无成，惊艳不了谁的岁月，温暖不了谁的人生。——选自散文集《我在人间凑数的日子》</p><p>你是我的可遇不可求，可遇不可留，可遇不可有。——选自散文集《我在人间凑数的日子》</p><p>哪有那么多烂道理，觉得值得就继续。——选自散文集《我在人间凑数的日子》</p><p>到底是活了一年，还是356个一天。——选自散文集《我在人间凑数的日子》</p><p>有时候生活没那么好，有时候生活也没那么坏。——选自散文集《我在人间凑数的日子》</p><p>当避开所有的惊喜，悲痛便不会来袭。——选自散文集《我在人间凑数的日子》</p><p>村口的狗叫了 其他狗也开始跟着叫 但它们不知道为什么叫。——选自散文集《我在人间凑数的日子》</p><p>笑对我来说只是一个表情，与快乐无关。——选自散文集《我在人间凑数的日子》</p><p>你说你虚度年华，空有一身疲倦，你看我，又还有几分像从前，纵然星河依旧滚烫，人间亦再无理想。——选自散文集《我在人间凑数的日子》</p><p>这个世界很小，小的我和你这么远都能相遇。这个世界很大，大的我和你在同一个城市都再也未见过一面。——选自散文集《我在人间凑数的日子》</p><p>意外和惊喜，都是个未知。你没办法改变，也只能顺其自然。——《我在人间凑数的日子》</p><p>我对世间唯一不满的是它总是让更懂事的人，承受更多。——选自散文集《我在人间凑数的日子》</p><p>我一直在试图走好每一步，却不尽人意。——选自散文集《我在人间凑数的日子》</p><p>爷爷没有输给战火，父亲没有输给贫穷，我却输给了和平年代的生活和爱情，以及太过自由。——选自散文集《我在人间凑数的日子》</p><p>哪有那么多烂道理，觉得值得就继续。——选自散文集《我在人间凑数的日子》</p><p>如果不是刻意相见,原来真的不会遇见。——选自散文集《我在人间凑数的日子》</p><p>我有喜欢的人了，可这无人作证，也无人知晓。——选自散文集《我在人间凑数的日子》</p><p>我从小幻想着长大，幻想着长大之后可以工作,挣到钱了就可以自己买喜欢的东西了。长大以后总怀念小的时候，感觉那时候的生活才是最快乐的。——选自散文集《我在人间凑数的日子》</p><p>有时候生活没那么好，有时候生活也没那么坏。——选自散文集《我在人间凑数的日子》</p><p>我就这么坐着，生活给我什么我就接着，拿走什么我就看着。——选自散文集《我在人间凑数的日子》</p><p>可惜我啊,相貌平平,一事无成，惊艳不了谁的岁月,温暖不了谁的人生。——选自散文集《我在人间凑数的日子》</p><p>后来我才发现，那并不属于我的花，我只是途径她的绽放。——选自散文集《我在人间凑数的日子》</p><p>咸鱼翻身还是咸鱼，蚂蚁再强也只是蚂蚁。——选自散文集《我在人间凑数的日子》</p><p>她其实什么都知道,她知道你爱她,她知道你在等她。她知道，她什么都知道,但是他就是不要你。——选自散文集《我在人间凑数的日子》</p><p>自己所谓的不想被打扰，实际上是无人问津的安慰。——选自散文集《我在人间凑数的日子》</p><p>拼命地工作只是为了活成普通人。——选自散文集《我在人间凑数的日子》</p><p>嫉妒使我面目全非，暗恋使我卑微入骨。——选自散文集《我在人间凑数的日子》</p><p>曾以为贫穷是指饥饿、衣不附体，现在才懂得，它是孤独与无人问津！——选自散文集《我在人间凑数的日子》</p><p>我到底经历了什么，才能收起暴躁的脾气和骄傲。——选自散文集《我在人间凑数的日子》</p><p>既没有清晨的粥，为何不去贪恋深夜的酒。——选自散文集《我在人间凑数的日子》</p><p>什么都是假的,只有穷是真的。——选自散文集《我在人间凑数的日子》</p><p>她家真的很穷，穷的一塌糊涂。我问她说可以做我女朋友吗?她说门都没有..——选自散文集《我在人间凑数的日子》</p><p>明明什么资本也没有，却总觉得自己能发大财。——选自散文集《我在人间凑数的日子》</p><p>“你最孤独的时刻是什么时候?” “千里迢迢背井离乡,下了客车正是夜晚，看见身后万家,灯火通明。万千灯盏,都不是归处。”——选自散文集《我在人间凑数的日子》</p><p>没有人可以永远无条件的陪伴着你，要知道，下雨天的时候连影子都会缺席。——选自散文集《我在人间凑数的日子》</p><p>后来遇到个女孩，她让我明白原来洗澡只要2分钟，吃饭只要30秒。原来男生也可以被爱。——选自散文集《我在人间凑数的日子》</p><p>说实话那些坎坷，我一个都没有撑过去。——选自散文集《我在人间凑数的日子》</p><p>人对喜欢的东西,会有超过200%的用心和耐心。所以，她爱不爱你其实很明显。——选自散文集《我在人间凑数的日子》</p><h3 id="生活就像游乐场"><a href="#生活就像游乐场" class="headerlink" title="生活就像游乐场"></a>生活就像游乐场</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;我在人间凑数的日子&quot;&gt;&lt;a href=&quot;#我在人间凑数的日子&quot; class=&quot;headerlink&quot; title=&quot;我在人间凑数的日子&quot;&gt;&lt;/a&gt;我在人间凑数的日子&lt;/h2&gt;&lt;h2 style=&quot;text-align:right&quot;&gt;——收录自广大皮友&lt;/h2&gt;

</summary>
      
    
    
    
    <category term="闲谈" scheme="https://jcxiaozhan.gitee.io/categories/%E9%97%B2%E8%B0%88/"/>
    
    
  </entry>
  
</feed>
